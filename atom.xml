<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小康博客</title>
  
  <subtitle>计算化学与分子模拟爱好者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kangsgo.com/"/>
  <updated>9999-10-18T12:37:22.000Z</updated>
  <id>http://kangsgo.com/</id>
  
  <author>
    <name>kangsgo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分子模拟网站推荐</title>
    <link href="http://kangsgo.com/2.html"/>
    <id>http://kangsgo.com/2.html</id>
    <published>9999-11-27T18:37:22.000Z</published>
    <updated>9999-10-18T12:37:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考资料：待编辑</p><h3 id="1-内容性推荐"><a href="#1-内容性推荐" class="headerlink" title="1.内容性推荐"></a><span style="color: #3366ff;">1.内容性推荐</span></h3><h4 id="综合性网站推荐："><a href="#综合性网站推荐：" class="headerlink" title="综合性网站推荐："></a>综合性网站推荐：</h4><p><a href="http://emuch.net/bbs/forumdisplay.php?fid=322" target="_blank" rel="external">小木虫论坛</a>：一个综合性的论坛，项目非常杂，但是里面有非常多的资料分享。感觉对于交流和求知比较欠缺 。</p><p><a href="http://www.bioms.org" target="_blank" rel="external">bioms分子模拟论坛</a>：是一个专业性质的论坛，主要集中讨论计算机辅助药物设计这一快，氛围非常好，但是最近活跃度有所下降。</p><p><a href="http://jerkwin.github.io/" target="_blank" rel="external">哲科文</a>：李继存老师的个人博客，主要是gromacs的一些中文教程，老师人也非常好</p><p><a href="http://platinhom.github.io/" target="_blank" rel="external">勤力既懒猪</a>：一些模拟方面的教程</p><p><a href="http://bbs.keinsci.com/forum.php" target="_blank" rel="external">计算化学公社</a>：有论坛和门户网站，具体没有发掘~主要是看到了VMD的教程</p><p><a href="http://sobereva.com/54" target="_blank" rel="external">思想家公社的门口</a>：博客</p><p><a href="http://spaces.ac.cn/" target="_blank" rel="external">科学空间</a>: 并不是一个严格的分子模拟网站，更多的是算法相关的资源分享，还是非常推荐查看的</p><p><a href="http://blog.sina.com.cn/aj426q" target="_blank" rel="external">吴钩白的博客</a>: 我最崇拜的学长之一，知识渊博，喜欢亲切的叫他一声老师</p><p><a href="http://howiedlut.top/" target="_blank" rel="external">Howie</a>：永远相信美好的事情终将发生</p><p><a href="http://blog.csdn.net/u012325865?viewmode=contents" target="_blank" rel="external">AspirinCode</a> 和 <a href="http://www.aspirincode.com/" target="_blank" rel="external">Hexo版本</a>:  建民兄的博客，其对药物设计有非常独特的见解</p><h4 id="QQ群："><a href="#QQ群：" class="headerlink" title="QQ群："></a>QQ群：</h4><p>BioMS分子模拟-药物设计 <span style="color: #ff6600;">68093966  </span> 【十分活跃】</p><p>药物研发科学计算 <span style="color: #ff6600;">205448601</span></p><p>GROMACS中文组 <span style="color: #ff6600;">132266540    </span>【专一性强，很热心】</p><p>「药设之道」医药R&amp;D <span style="color: #ff6600;">426442973</span></p><p>分子模拟技术交流 <span style="color: #ff6600;">397981984     <span style="color: #000000;">【田老师组织的群，很活跃】</span></span></p><p>计算生命科学  <span style="color: #ff6600;">496548248</span></p><h4 id="微信公众号："><a href="#微信公众号：" class="headerlink" title="微信公众号："></a>微信公众号：</h4><p><del><span style="color: #ff6600;">bioinformatics日课/生物极客</span>   由清华大学一枚学生做的，非常用心，里面内容全都是原创内容</del>【已停更】</p><p><span style="color: #ff6600;">生物研究生</span> 分子模拟牛人小9创立的一个分享分子模拟方面内容的微信公众号</p><p><span style="color: #ff6600;">分子模拟之道</span> 李老师创办的生物模拟资讯公众号，内容不多但是篇篇精华</p><p><span style="color: #ff6600;">王初课题组</span> 好文章的推荐公众号</p><p><span style="color: #ff6600;">生信杂谈</span> 分子模拟与生物信息杂交体</p><p><span style="color: #ff6600;">殷赋科技</span> 一个药物设计新兴公司</p><p><span style="color: #ff6600;">克里科学苑</span>  致力于组织生命科学及医学领域科研及应用培训的专业机构</p><p><span style="color: #ff6600;">药设之道</span>  致力于向大众和专业工作者传播药物设计新方法的公众号</p><h3 id="2-软件推荐与教程"><a href="#2-软件推荐与教程" class="headerlink" title="2.软件推荐与教程"></a><span style="color: #3366ff;">2.软件推荐与教程</span></h3><p>1.序列比对</p><p>ClustaX ：  没有做过多深入了解</p><p>2.蛋白建模</p><p>2.1同源建模</p><p><a href="https://salilab.org/modeller/" target="_blank" rel="external">Modeller</a>：同源建模经典网站</p><p>Easymodeller：Modeller的可视化界面，深入学习的话不建议学</p><p><a href="http://www.swissmodel.expasy.org/" target="_blank" rel="external">Swiss-model</a>：在线建模网站，质量不错，可操控性高</p><p>2.2从头建模</p><p><a href="http://zhanglab.ccmb.med.umich.edu/" target="_blank" rel="external">I-TASSER</a>：Zhang实验室制作的一个从头建模在线服务器</p><p>Rostta：综合性软件，学术免费</p><p>2.3模型评价</p><p><a href="http://services.mbi.ucla.edu/SAVES/" target="_blank" rel="external">SAVES</a>：包含XdVal | MTZdump | Ramachandran Plot | pdbU | pdbSNAFU  | PROCHECK | Verify3D | ERRAT 多种评价，其中常用Ramachandran Plot和ERRAT2</p><p>2.4 结构准备</p><p><a href="http://openbabel.org/" target="_blank" rel="external">OpenBabel</a>：一个格式转换工具，具有本地编译包和多种语言的API</p><p><a href="http://kinemage.biochem.duke.edu/software/reduce.php" target="_blank" rel="external">Reduce</a>： 一个加氢删氢的命令行工具，仅支持PDB格式</p><p>3.分子对接</p><p><a href="http://dock.compbio.ucsf.edu/DOCK_6/index.htm" target="_blank" rel="external">DOCK</a>: UCSF DOCK,现在是第6版，同样具有柔性对接和刚性对接，对接的结果评价中等，学术免费，需要搭配Chimera使用。平台：linux</p><p><a href="http://autodock.scripps.edu/" target="_blank" rel="external">AutoDock</a>：最为经典的对接软件，有一款HIV药物据说就是它的功劳，使用广泛，但是速度和准确度很低，据飞天说能量打分尚可。平台：linux/windows</p><p><a href="http://autodock.scripps.edu/" target="_blank" rel="external">AutoDock Vina</a>： 与AutoDock为同一实验室不同课题组产物，速度和准确度都有较大的提高，算是免费里面做的最好之一了。平台：linux/windows</p><p><a href="http://gemdock.life.nctu.edu.tw/dock/igemdock.php" target="_blank" rel="external">Igemdock</a>：台湾设计的一款对接软件，选择活性区域位点比较麻烦，但是准确度高（据华中师大-精灵测试）。平台：linux/windows</p><p>LibDock： 对接速度快，Discover Studio集成，不是一般人买得起。平台：linux/windows</p><p>CDOCK：相对于LibDock更为精确。平台：linux/windows</p><p>LigandFit： 柔性对接，同上，这三款都是DS集成的对接。平台：linux/windows</p><p><a href="http://pc1664.pharmazie.uni-marburg.de/drugscore/" target="_blank" rel="external">DrugScoreX</a>： DrugScoreX是一个较新的，对于蛋白配体打分具有比DrugScore更高精度的软件，其打分功能是基于统计势能？(statistical potentials)</p><p><a href="http://kangsgo.com/665.html">LigScore</a>： 与DrugScore的算法类似,提供本地(IMP 工具包)以及在线服务。</p><p><a href="http://poseview.zbh.uni-hamburg.de/" target="_blank" rel="external">PoseViewWeb</a> : 在线的对接2D相互关系图形显示工具</p><p>4.分子模拟/分子动力学 MD</p><p><a href="http://www.gromacs.org/" target="_blank" rel="external">gromacs</a>: 一个开源的分子动力学模拟软件</p><p><a href="http://ambermd.org/" target="_blank" rel="external">Amber</a>: 一个以生物为主导的分子动力学模拟软件，GPU加速模块收费</p><p><a href="http://openmm.org/" target="_blank" rel="external">OpenMM</a>： 一个开源的分子动力学模拟软件，发展很好，但是社区和一类模拟软件还是有差距</p><p><a href="http://openmd.org/" target="_blank" rel="external">OpenMD</a>: 小型模拟软件</p><p><a href="http://www.cgmartini.nl/index.php" target="_blank" rel="external">Martini</a>: 最为流行的粗粒化力场</p><p><a href="http://kangsgo.com/681.html">LigParGen: </a>配体OPLS/CM1A力场在线生成</p><p>4.1 体积检测：</p><p><a href="http://kangsgo.com/306.html">Epock</a>   Epock是一个可以动态计算结合腔大小的一个软件，由于有VMD的可视化软件，所以非常的容易上手，简单~</p><p><a href="http://kangsgo.com/443.html"> fpocket2</a>  具有在线服务器的体积检测软件，在线服务:<a href="http://bioserv.rpbs.univ-paris-diderot.fr/services/fpocket/" target="_blank" rel="external">点我进去</a></p><p>4.2 综合轨迹分析工具</p><p><a href="http://mdtraj.org/1.9.0/" target="_blank" rel="external">MDTraj</a>  可以进行轨迹转化，氢键分析等较为底层的工具包，但是非常好用</p><p><a href="http://www.mdanalysis.org/" target="_blank" rel="external">MDAnalysis</a>  完全用Python编写的分析工具包</p><p><a href="http://www.plumed.org/" target="_blank" rel="external">PLUMED</a>  一个非常有名的分子模拟分析工具，暂时没有看</p><p>5.药效团构建</p><p>6.毒理测试</p><p>7.可视化软件</p><p><a href="http://openastexviewer.net/web/" target="_blank" rel="external">AstexViewer3.0</a>  是一个基于java的轻量级软件，虽然功能简单，但是五脏俱全，特别是可以进行电子密度图查看，相对于pymol和vmd比较容易上手，其一些软件的设置方式与pymol和vmd类似，适合新学者或者编写脚本批量分析。</p><p><a href="http://www.pymol.org/" target="_blank" rel="external">Pymol </a> 一个跨平台的可视化开源软件，后因被薛定谔公司收购，有一部分发展为闭源更新</p><p><a href="http://www.ks.uiuc.edu/Research/vmd/" target="_blank" rel="external">VMD </a> 一个以命令行为主的开源可视化软件，个人感觉发展势头优于pymol，且可以和gromacs较好的连用，NAMD，amber的集成性也较好</p><p><a href="http://www.cgl.ucsf.edu/chimera/" target="_blank" rel="external">Chimera</a>  UCSF chimera 功能强大，可以与dock连用</p><p><a href="http://autodock.scripps.edu/" target="_blank" rel="external">PMV</a> Autodock/Autodock搭配的可视化软件，使用的人较少，一般都是用autodock搭配着使用的</p><p>8.开发库</p><p><a href="http://biopython.org/wiki/Main_Page" target="_blank" rel="external">Biopython</a>：一个Python工具包，中文文档可以<a href="http://biopython-cn.readthedocs.io/zh_CN/latest/" target="_blank" rel="external">点此</a>查看</p><p><a href="http://scikit-bio.org/" target="_blank" rel="external">scikit-bio</a>: 一个提供多种生物科学功能，数据结构和算法的Python包</p><p>9.综合性软件</p><p>最后更新:2017/10/13</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考资料：待编辑&lt;/p&gt;
&lt;h3 id=&quot;1-内容性推荐&quot;&gt;&lt;a href=&quot;#1-内容性推荐&quot; class=&quot;headerlink&quot; title=&quot;1.内容性推荐&quot;&gt;&lt;/a&gt;&lt;span style=&quot;color: #3366ff;&quot;&gt;1.内容性推荐&lt;/span&gt;&lt;/h3&gt;
      
    
    </summary>
    
    
      <category term="推荐" scheme="http://kangsgo.com/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://kangsgo.com/cj8x5abdp005si8ra80bk12cp.html"/>
    <id>http://kangsgo.com/cj8x5abdp005si8ra80bk12cp.html</id>
    <published>2017-10-18T11:55:39.674Z</published>
    <updated>2017-10-18T11:55:39.674Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Martini 2.2P力场笔记</title>
    <link href="http://kangsgo.com/811.html"/>
    <id>http://kangsgo.com/811.html</id>
    <published>2017-10-10T03:02:14.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><blockquote><p><span style="color: #000000;">阅读前请注意:</span></p><p><span style="color: #000000;">1.此文仅是我看Martini文献的一些总结，若需要使用Martini力场建议仔细的查看官网信息和相关文献。此文花费较大精力，若有什么意见或者建议欢迎发邮箱交流。邮箱为<strong>kangsgo@vip.qq.com  湖大-小康</strong></span></p><p><span style="color: #000000;">2.由于我只关注蛋白模拟，故只查阅了Martini力场2.2的文献以及蛋白参数文献</span></p><p><span style="color: #000000;">3.此笔记对于Martini性能评测部分只关注了部分内容</span><br>Martini力场自问世以来就受到了很多人的喜爱，特别是蛋白的力场，最近（2013年）Martini力场在许多方面都有应用。包括如下:1.蛋白调节囊泡的融合.2.膜结构域的形成.3.磷脂的翻转（flip-flopping）.4.磷脂和表面行为（？lipid and surfactant phase behavior）5.单磷脂层的折叠.6.膜束缚（?tether）的形成.7.肽和蛋白介导的膜的重构.7.膜蛋白的自组装和磷脂的分类.8.膜蛋白的门控和构象的变化.9.固体上蛋白的吸附作用.10.蛋白纤维的机制研究.10.蛋白的聚集.11.肽的两亲性12.淀粉纤维研究.13.纳米孔吸附和表面湿度.14.纳米孔的跨膜转运和磷脂吸附.15.膜工程.16.多聚物介导的膜黏附和束缚(?tether).17.<span class="word">nanocoating</span> <span class="word">of</span> <span class="word">a </span><span class="word">polymer</span> <span class="word">matrix.17.蛋白配体的结合.18.脂蛋白颗粒和纳米圆盘的结构和动力学研究.19.药物传递体系等等。</span></p></blockquote><p>Martini 2.2和Martini 2.0相比较，做了如下内容的提升:</p><p>对蛋白力场进行了修复，包括：</p><p>(i)新的脯氨酸，苯丙氨酸和色氨酸侧链拓扑，以改善分区自由能(?partitioning free energies)</p><p>(ii)引入偏心电荷模型，以更实际地描述相反电荷的残基之间的联系。</p><p><span style="color: #ff0000;">以上两条简而言之就是对之前的电荷模型进行很大的优化</span></p><p>(iii)对于极性侧链参数化极性珠子以提升在非极性环境中的二聚化和表明的结合(iv)调整键的项目来提升α螺旋的长度和增加多聚丙氨酸和谷氨酸的稳定性。</p><p>新版本力场命名为Martini 2.2（若为极性水模型，则为2.2P）</p><h5 id="Martini-2-2的评价使用了如下的参考评价内容"><a href="#Martini-2-2的评价使用了如下的参考评价内容" class="headerlink" title="Martini 2.2的评价使用了如下的参考评价内容:"></a>Martini 2.2的评价使用了如下的参考评价内容:</h5><h6 id="伞状采样（PS-文献中纳入为分区自由能中）"><a href="#伞状采样（PS-文献中纳入为分区自由能中）" class="headerlink" title="伞状采样（PS:文献中纳入为分区自由能中）:"></a>伞状采样（PS:文献中纳入为分区自由能中）:</h6><p>对氨基酸残基侧链类似物（SCAs）进行了跨膜（DOPC膜）伞状采样，方法如同Martini 2.0文献中</p><h6 id="分区自由能-Partitioning-Free-Energy"><a href="#分区自由能-Partitioning-Free-Energy" class="headerlink" title="分区自由能(Partitioning Free Energy):"></a>分区自由能(Partitioning Free Energy):</h6><p>SCAs在水和油（癸烷,decane）中的分区自由能使用热力学整合的方法计算。具体的为自由能和相应误差使用GROMACS的g_bar（gmx5以上对应的为 gmx bar）分析工具。分区自由能<span class="word">ΔG</span><span class="word">part 为水中的自由能减去油中的自由能。</span></p><h6 id="二聚化自由能（Dimerization-Free-Energy）"><a href="#二聚化自由能（Dimerization-Free-Energy）" class="headerlink" title="二聚化自由能（Dimerization Free Energy）:"></a>二聚化自由能（Dimerization Free Energy）:</h6><p>也是进行一个另外一种伞状采样（大致为两个SCAs，拉动其中一个SCAs运动）。后经过如下公式计算ΔGdim:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/1.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/1.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/1.png)</div>            </figure></p><p>其中kB为波尔兹曼（Boltzmann）约束，T为模拟温度，r为SCAs’ COM距离，rc 是二聚物-单体之间的cutoff（PMF达到第一个最大值的距离），Rmax是考虑的最大距离， v<span class="word">⌀为标准体积(1.66nm3，等于1mol L-1)，g(r)为径向分布函数（?回转半径？），其通过PMF可以如下计算:</span></p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/2.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/2.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/2.png)</div>            </figure></p><h6 id="WW肽结合力（Binding-of-WW-Peptides）"><a href="#WW肽结合力（Binding-of-WW-Peptides）" class="headerlink" title="WW肽结合力（Binding of WW Peptides）:"></a>WW肽结合力（Binding of WW Peptides）:</h6><p>WW表示的为Wimlery-White，是一个五肽，序列为Ac-WLXLL，其中X为可变残基。<span class="word">ΔG</span><span class="word">WW获得主要是通过free energy perturbation（FEP）和multiple Bennett acceptance ratio（MBAR）相互联系的方法，计算公式为:</span></p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/3.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/3.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/3.png)</div>            </figure></p><p>zs=1.0nm,zf=4.0nm，其定义分别为POCC/water限制和bulk water限制。数值使用的Simpson’s 规则计算。相关的X残基<span class="word">ΔΔG</span><span class="word">WW</span><span class="word">(X)的计算为ΔGWW(X)减去ΔGWW(Ala)</span></p><h5 id="优化方法和实验结果"><a href="#优化方法和实验结果" class="headerlink" title="优化方法和实验结果:"></a>优化方法和实验结果:</h5><h6 id="1-改变Phe-Trp和Pro的颗粒类型"><a href="#1-改变Phe-Trp和Pro的颗粒类型" class="headerlink" title="1.改变Phe,Trp和Pro的颗粒类型"></a>1.改变Phe,Trp和Pro的颗粒类型</h6><p>作者第一个方法为通过改变Phe,Trp和Pro的颗粒类型，能够解决Martini 2.1力场中这三个原子类型疏水性太强的弱点，如下表:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/4.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/4.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/4.png)</div>            </figure></p><p>其中ref为全原子模拟的结果，通过上表可以发现通过改变颗粒的类型可以使得结果有一定的提升。同时也不会影响伞状采样的结果，对于部分伞状采样的评价相比有更好的结果产生。如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/5.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/5.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/5.png)</div>            </figure></p><h6 id="2-改变电荷偏移中心来改善电荷残基"><a href="#2-改变电荷偏移中心来改善电荷残基" class="headerlink" title="2.改变电荷偏移中心来改善电荷残基"></a>2.改变电荷偏移中心来改善电荷残基</h6><p>作者通过改变电荷偏移中心来改善电荷残基，在Martini 2.1和Martini 2.1P进行同电荷和异电荷残基的PMF实验时，结果如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/6.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/6.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/6.png)</div>            </figure></p><p>可以发现，在Martini 2.1种，对于带相反电荷的残基仅仅捕捉到微弱的联系，然而，全原子力场表现出非常强的联系。相反，对于相同电荷残基，Martini 2.1预测了稳定的联系，而全原子模型则相反。当使用极性水模型以后（Martini 2.1P）,库伦联系下降为1/r,同时因为CG珠子拥有更大的大小（定义的范德华力为~0.26nm）限制了其接近电荷珠子到~0.5nm。然而全原子模型可以更加的接近。</p><p>为了弥补这个问题，作者为带电侧链设计了一个替代模型，其中静电和范德华相互作用由两个不同的粒子承载。如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/7.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/7.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/7.png)</div>            </figure></p><p>两个颗粒通过一个共约束的0.11nm长的键相互联系。使用这个偏移中心的设置，在Lys-Glu联系对的情况下，电荷可能更接近，并且相互作用增加约3倍（如图2）。但Lys-Lys联系对没有得到改善。</p><p>对于其它珠子是否有改善还有待检验。</p><p>同时作者还做了以下优化，由于自己用不到，仅在这里做简单介绍:</p><ol><li>提升非极性残基使用非极性颗粒</li><li>提升骨架α螺旋和Ala和Gly多聚物序列的稳定性</li></ol><h6 id="3-在溶解肽中测试新的参数"><a href="#3-在溶解肽中测试新的参数" class="headerlink" title="3. 在溶解肽中测试新的参数"></a>3. 在溶解肽中测试新的参数</h6><p>作者进行了一条16肽的模拟（GCN4亮氨酸拉链，PDB code:2ZTA）,8号位（Lys）和12号位（Leu）残基突变为非极性的Asn，突变后的肽总共包含5个非极性氨基酸残基(<span class="word">Gln4,</span> <span class="word">Asn8,</span> <span class="word">Asn12,</span> <span class="word">Ser14,</span> <span class="word">Asn16</span>)和6个电荷残基(<span class="word">Lys3,</span> <span class="word">Glu6,</span> <span class="word">Asp7,</span> <span class="word">Glu9,</span> <span class="word">Glu10</span> <span class="word">and </span><span class="word">Lys14</span>),统计COM距离结果如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/10/8.png" alt="](http://kangsgo.com/wp-content/uploads/2017/10/8.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/10/8.png)</div>            </figure></p><p>对于非极性氨基酸残基，Martini 2.1P和Martini 2.2P之间有两个方面不同，第一点，峰在短的距离（侧链指向彼此）和长的距离（侧链远离彼此），在Martini 2.2P中转变为一个更小的平均距离，这和全原子模拟更加匹配。第二点为分布更窄（Asn12−Ser14 and Ser14−Asn16）。对于带有相反电荷残基的Lys3-Glu6和Glu11-Lys15联系对，当使用Martini 2.2P时，在短距离处观察到的峰值变得更宽或完全消失。 对于带有相反（Glu6-Asp7）和相等电荷（Glu10-Glu11）direct neighbors，用新参数对相同的方向进行采样。 对于带有相反电荷的Asp7-Glu10残基对，新方向更近的距离被采样到，从而更好地再现了全原子模拟的分布。</p><p>虽然这种特定肽的侧链的整体行为似乎已经随着我们的新模型而改善，但是也很清楚，我们的CG模型不能捕获使用原子模型时所看到的分布的一些细节。需要做更多的测试。</p><p>文章最后还提到了考虑以后二级结构可以发生转变</p><p>参考文献:</p><ol><li>de Jong D H, Singh G, Bennett W F D, et al. <strong>Improved parameters for the martini coarse-grained protein force field</strong>[J]. Journal of Chemical Theory and Computation, 2012, 9(1): 687-697.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&quot;color: #000000;&quot;&gt;阅读前请注意:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #000000;&quot;&gt;1.此文仅是我看Martini文献的一些总结，若需要使用
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/Gromacs/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>MARTINI 2.0力场笔记</title>
    <link href="http://kangsgo.com/770.html"/>
    <id>http://kangsgo.com/770.html</id>
    <published>2017-09-30T10:29:37.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>阅读前请注意:</p><p>1.此文仅是我看Martini文献的一些总结，若需要使用Martini力场建议仔细的查看官网信息和相关文献。此文花费较大精力，若有什么意见或者建议欢迎发邮箱交流。邮箱为<strong>kangsgo@vip.qq.com  湖大-小康</strong></p><p>2.由于我只关注蛋白模拟，故只查阅了Martini力场2.0的文献以及蛋白参数文献</p><p>3.此笔记并未包含Martini力场性能测评部分，可能后续会加上<br>粗粒化（CG ）模拟在各种各样的模拟化技术中提供与全原子模型（AA model）相比更广的空间和时间尺度研究。在粗粒化模拟研究的早期一般运用在蒙特卡洛模拟上，这是一种基于概率的模拟算法，与经典模拟在理论上还是有大的差别，早期的CG模型其缺点是需要每次模拟前都进行参数的设置矫正，而Martini力场开发的初衷是更为提供一种能够进行普适应用的操作简单的力场。</p></blockquote><p>Martini的力场开发目的主要是应用于囊泡的形成，薄层相的转移，结构和膜的自组装等等，其比较关注于<strong>极性与非极性之间</strong>的相互转换/作用。Martini力场相比之前的力场模拟（2007年以前）有更多的能量”等级”和类型，与实验参数也拟合的更好，同时提供了环类物质的CG 模型的方法。</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/1.gif" alt="](http://kangsgo.com/wp-content/uploads/2017/09/1.gif)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/1.gif)</div>            </figure></p><h5 id="力场概述（2-0版本）："><a href="#力场概述（2-0版本）：" class="headerlink" title="力场概述（2.0版本）："></a>力场概述（2.0版本）：</h5><h6 id="联系位点："><a href="#联系位点：" class="headerlink" title="联系位点："></a>联系位点：</h6><p>Maritini力场与其他CG力场一样，均为4个heavy原子用一个单一珠子所联系。珠子主要有四种主要类型。polar（P），nonpolar（N），apolar（C）和charged（Q）。同时有18种亚型，比如按照成氢键能力用单字母分为（d=donor，a=acceptor，da=both，0=none）或者指示极性（1，最低极性，5，最高极性）</p><p><strong>蛋白的原子类型:</strong></p><p>蛋白残基中侧链表示:非极性残基Leu，Pro，Ile，Val，Cys和Met用C-类型颗粒表示。非极性残基Thr，Ser，Asn和Gln通过P-类型颗粒表示，氨基酸残基带有小的负电荷侧链Glu和Asp残基用Q-类型颗粒表示。正电荷氨基酸残基Arg和Lys采用带电荷的Q类型和不带电荷颗粒组成。带环芳香烃残基通过三（His，Phe和Tyr）或者四（Trp）个珠子来表示特别的环颗粒。Gly和Ala残基仅仅设置骨架颗粒。骨架参数依赖二级结构，如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/10.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/10.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/10.png)</div>            </figure></p><p>在溶液中或者无规卷曲或者弯曲中，骨架拥有非常强的极性特征（P类型），在部分螺旋或者β折叠中，内部骨架键减少了极性特征的放大（N类型）。辅氨酸是低极性的因为其缺乏氢键供体能力。其全原子映射结果如下表:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/8.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/8.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/8.png)</div>            </figure></p><h6 id="非键联系："><a href="#非键联系：" class="headerlink" title="非键联系："></a>非键联系：</h6><p>首先是Lennard-Jones(LJ)12-6势，公式如下:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/1-1.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/1-1.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/1-1.png)</div>            </figure></p><p>其中r为原子对距离，ε(字母代考)与σ为势能参数，因原子的种类而异，具体可以查看陈正隆老师的分子模拟一书。在martini力场中统一为σ=0.47nm，除了两个特别的类rings和antifreeze以外,还有一个例外就是Q类型和大多数极性类型 ，其C1和C2 斥力σ范围扩展为0.62nm。这个变化利于带电粒子在非极性介质中利于生成水化层。完整的参数数据如下表：</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/2.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/2.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/2.png)</div>            </figure></p><p>除了LJ势能以外，电荷组（类型Q）还有完整的qi,j联系，通过库能势：</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/3.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/3.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/3.png)</div>            </figure></p><p>库能势与之前的比较准确性略有降低，主要是为了和之前的模型相比平衡增加的疏水强度。εr(字母代考)相对介电常数为15，与之前相比略微降低。</p><h6 id="键联系："><a href="#键联系：" class="headerlink" title="键联系："></a>键联系：</h6><p>键的描述和上一个版本相比没有升级，主要还是微弱的简谐振动提供的。此项在陈正隆老师的书籍版本中译为键伸缩势能项。平均键长与σ相同，为0.47nm，约束力为Kbond=1250Kj*mol-1，公式如下:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/4.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/4.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/4.png)</div>            </figure></p><p>键角的简谐震荡项，参数依据为与全原子模型相互比较,计算公式如下：</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/5.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/5.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/5.png)</div>            </figure></p><p>一般情况下Kangle=25KJmol-1，θ0=180°，在涉及<span class="word">cis</span> <span class="word">double </span><span class="word">bond时，参数为Kangle=45KJmol-1（之前参数为35KJmol-1</span><span class="word">），θ0=120°，因为和全原子相比联系过于微弱。</span></p><p><strong>蛋白的键联系:</strong></p><p>蛋白的键长，键角，二面角和他们各自的力场约束统计起来作为键参数的参考。这些参数来源于PDB库中近2000个蛋白作为数据集。蛋白的二级结构来源于DSSP项目。计算的键长，键角和二面角如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/11.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/11.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/11.png)</div>            </figure></p><p>PDB数据库中的参数分布如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/12.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/12.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/12.png)</div>            </figure></p><h6 id="环化物参数"><a href="#环化物参数" class="headerlink" title="环化物参数:"></a>环化物参数:</h6><p>对于环化物，4个原子称为1个珠子是不怎么适用的，最佳为2个或者3个位1个珠子，具体可以查看文章中给的环己烷，苯环等的例子。由于会照成很大CG珠子密度，因此这些参数需要差别对待。特别的设置标签为“S”,其LJ势能的σ也是不同的，σ=0.43nm,ε(字母代考)缩小至75%。环的话<strong>分子内的</strong>LJ不适合该体系，而更换improper dihedral angle势来合理的解释。其公式如下:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/6.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/6.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/6.png)</div>            </figure></p><p><span class="word">θ的角度由i,j,k和j,k,l构成，θid则为平均角度，力场约束为Kid。</span></p><h6 id="二面角（dihedral-angle）参数-蛋白"><a href="#二面角（dihedral-angle）参数-蛋白" class="headerlink" title="二面角（dihedral angle）参数(蛋白):"></a>二面角（dihedral angle）参数(蛋白):</h6><p>对于氨基酸残基还有两个二面角势,其中improper 二面角势 Vid主要被用来阻止平面组的面外扭曲。Proper二面势Vd被使用来约束肽骨架的二级结构。这是一个非常重要的点，因此，若有蛋白序列二级结构的改变是不适合这个模型的（分别为公式5,6），公式如下:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/7.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/7.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/7.png)</div>            </figure></p><p>二面角参数仅仅在四个联系的珠子拥有相同的二级结构（螺旋或者延长(extended)），下表统计了所有侧链的键长和联系约束。</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/9.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/9.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/9.png)</div>            </figure></p><p>键角统计如下表:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/13-1.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/13-1.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/13-1.png)</div>            </figure></p><h6 id="抗凝剂参数"><a href="#抗凝剂参数" class="headerlink" title="抗凝剂参数:"></a>抗凝剂参数:</h6><p>由于水模型是P4颗粒，相对于真实的水更容易freezing，故需要Antifreez参数。CG 水在280到300K可能会freezes。freezing是一个核驱动的过程，一般CG水能够保留其流动性(fluid)非常长的时间，但是一旦成核形成，将会很快速的形成，在固态表面甚至膜表面可能都会加速水的freeze。若研究更低温度同样如此，故需要增加水的无序程度。引入抗凝剂BigP4，LJ参数从0.47nm改为0.57nm，为了避免相的分离，BP4-P4联系上升为等级“O”。其他按照正常颗粒。当加入抗凝剂以后会对液体平衡性产生一定的影响,但作者对膜水体系进行分析，发现在膜表面积，形成gel phase的转移温度，膜分子的横向扩散长度都没有很大的影响，故认为为可接受范围之内。</p><h6 id="模拟参数"><a href="#模拟参数" class="headerlink" title="模拟参数:"></a>模拟参数:</h6><p>对于模拟参数，非键联系的cut off距离设置为rcut=1.2nm。为了避免产生不必要的噪音，使用GROMACS 的标准偏移功能，<strong>其中能量和约束力设置在截止距离处消失</strong>。LJ势能的偏移从rshift=0.9nm到rcut。静电势偏移从rshift=0.0nm到rcut。静电势的偏移会对模拟距离依赖性的screening<strong>造成影响</strong>。neighbor list可以升到10 steps， <span class="word">neighbor</span> <span class="word">list</span> <span class="word">cutoff设置等于rcut。模拟步长可以升至dt=40fs。当然设置成25fs到30fs可能会更加稳定。选择时间步长的不同对自由能有一定的影响，影响约为5%。（从40到5fs），所以说影响不是很大。</span></p><p>对于粗粒化模拟时间因子一般扩大为2到10倍，文献中默认的时间因子为4（注:文献1如是说，文献3说的为2到8倍，但时间因子均说的为4），即CG模型模拟10ns，实际上相当于现实中40ns，可以粗略的乘以4。产生这个现象的原因是CG模型相对于AA模型联系更加的平滑。</p><p><strong>蛋白模拟:</strong></p><p>文献中提供的作者使用的模拟参数如下，<strong>可能和官网的有出入，毕竟时间和版本较久（文献中的gromacs为3.3），故以下内容是过时的，仅供参考和笔记作用。</strong></p><ul><li>拓扑文件使用官网的脚本</li><li>每个组（lipids，water 和proteins）的温度算法采用Berendsen温度耦合算法，时间为1ps</li><li>使用Berendsen算法进行半均匀（ <span class="word">Semi-isotropic</span>）压力耦合，大气压为1bar任意的在膜平面上且垂直于膜，使用的时间约束为5.0ps，压缩率为4.5*10-5 bar-1</li><li>芳香氨基酸残基Val，Ile和Thr侧链和骨架侧链键使用的约束算法为LINCS算法，主要是为了避免快速波动（fluctuations，看到这个单词是否想到了RMSF?）所造成的大量的不稳定现象的发生。</li><li>neighbor list 设置为10 steps，neighbor list cutoff等于rcut=1.2nm和其他设置为一样</li><li>由于计算影响的原因（猜测是为了更快），所有的珠子设置的相对质量为72，依据为4个水分子，对于环（ring）结构，相对质量设置为45</li><li>时间尺度和前面一样，时间因子为4，即25fs相当于有效时间100fs，当然这个估计是不精确的，故需要进行精确时间的模拟计算是行不通的，但是精确模拟计算运用是较少的,故对于研究扩散的时候要特别小心，即时有些扩散的CG模型研究与实验吻合较好。</li></ul><h5 id="拓扑中离子需要注意"><a href="#拓扑中离子需要注意" class="headerlink" title="拓扑中离子需要注意:"></a>拓扑中离子需要注意:</h5><p>对于粒子，考虑到AA力场对ions难度已经很大，CG ion力场仅在定性上准确。</p><p>这段我也不是很懂，原文如下:</p><p><strong>Keeping in mind the difficulty of model-ing of ions already with AA force fields, the CG ion force field is only qualitatively accurate</strong></p><h5 id="Martini力场性能测评部分结果"><a href="#Martini力场性能测评部分结果" class="headerlink" title="Martini力场性能测评部分结果:"></a>Martini力场性能测评部分结果:</h5><h6 id="氨基酸残基侧链在DOPC膜上跨膜研究"><a href="#氨基酸残基侧链在DOPC膜上跨膜研究" class="headerlink" title="氨基酸残基侧链在DOPC膜上跨膜研究"></a>氨基酸残基侧链在DOPC膜上跨膜研究</h6><p>对不同侧链从DOPC膜中拉出（PMF）研究，将CG模型和全原子模型进行比较，研究结果表明疏水性氨基酸与全原子模拟相比有非常好的吻合，特别是barrier方面。如图中的leucine，isoleucine和valine。对于tryptophan和tyrosine，barrier在全原子profiles中不存在，且在CGprofiles低于5KJ/mol。且最小区域和全原子模拟拟合较好。对于极性氨基酸残基，对于全原子模型和CG模型，也有合理的分布。电荷残基在全原子模拟和CG模拟之间显示了非常大的不同。对于CG模型，其在进入膜中的自由能惩罚被严重低估，但是还是仍然高的（glu，asp和arg超过40，lys超过35）进入膜的数量是可以忽略不计的，换而言之其对于入膜这个时间是没有影响的，但是其他影响是有可能的，这也是力场需要改进的地方。完整的PMF结果如下图:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/14-1.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/14-1.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/14-1.png)</div>            </figure></p><p>但是需要注意的是与其相比较的全原子力场为OPLSAA力场，OPLSAA在全原子力场中对于蛋白的表现也并不是那么的好，其对于蛋白是用的老的amber力场，且开发的人较少，长时间未开发（来源:GROMACS中文组-李继存老师）</p><h6 id="氨基酸残基联系常数"><a href="#氨基酸残基联系常数" class="headerlink" title="氨基酸残基联系常数:"></a>氨基酸残基联系常数:</h6><p>氨基酸残基i和j的定义如下:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/15.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/15.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/15.png)</div>            </figure></p><p>其中1 / C是校正系统中物种浓度的因子,P(x)是在X状态下找到的概率。其中[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/16.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/16.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/16.png)</div>            </figure>，NA是Avogadro’s 数，V是盒子的体积。bound和unbound状态通过计算复合物溶液可及表面（solvent accessible surface area ASA）的不同。当ASA低于阈值的话表示两个残基是联系的，若高出阈值则定义为不联系，阈值的选择来自ASA的直方图分布。得到的结果如下表:</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/17.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/17.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/17.png)</div>            </figure></p><p>可以发现CG模型和全原子模拟的比例是一样的，但是CG模型较全原子模型数值有低估。</p><h5 id="Martini力场的限制"><a href="#Martini力场的限制" class="headerlink" title="Martini力场的限制:"></a>Martini力场的限制:</h5><p>1.参数对于固体相并不是那么准确，相比液体相来说固体和气体相显得太稳定</p><p>2.内在熵变会丢失，温度依赖性受到了影响。Martini模型，也许在大多数CG方法中一样遇到的另一个困难是将极性和带电荷的化合物分配成低介电常数。因为极性物质的相互作用强度在非极性环境中会被低估。</p><p>3.由于开发的初衷是涉及在非极性环境中形成极性/带电复合物的应用尤其容易受到影响</p><p>4.忽略了长程电荷力是另一个限制，<strong>超过1.2nm的长程电荷不会被统计！</strong>但原则上是可以增加长程电荷的，必须认识到，静电相互作用方案的改进可能影响其他性质，例如每个脂质的面积或自发曲率</p><p>5.由于氨基酸残基二面角的存在，<strong>使得蛋白的二级结构无法改变</strong>，进行模拟的前提之一是蛋白二级结构是没有变化的，若需要查看二级结构的变化，可以使用Go模型。具体可以查看参考文献2.</p><p>由于这些限制，个人看法Martini力场还是有很多可以开发和提升的地方，这个力场还是很不是完美，<strong>特别是对于带电性质的研究，Martini力场可能是不可行的，有许多需要做的工作来进行完善，否则很难得到自己想要得到的结果！</strong></p><p>最后更新于2017-9-30</p><p>参考文献:</p><ol><li>Marrink S J, Risselada H J, Yefimov S, et al. <strong>The MARTINI force field: coarse grained model for biomolecular simulations</strong>[J]. The journal of physical chemistry B, 2007, 111(27): 7812-7824.</li><li>Go N, Taketomi H. Respective roles of short-and long-range interactions in protein folding[J]. Proceedings of the National Academy of Sciences, 1978, 75(2): 559-563.</li><li>Monticelli L, Kandasamy S K, Periole X, et al. <strong>The MARTINI coarse-grained force field: extension to proteins</strong>[J]. Journal of chemical theory and computation, 2008, 4(5): 819-834.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;阅读前请注意:&lt;/p&gt;
&lt;p&gt;1.此文仅是我看Martini文献的一些总结，若需要使用Martini力场建议仔细的查看官网信息和相关文献。此文花费较大精力，若有什么意见或者建议欢迎发邮箱交流。邮箱为&lt;strong&gt;kangsgo@vip.qq.co
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/Gromacs/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>[转载]ubuntu16耳机没声音解决</title>
    <link href="http://kangsgo.com/766.html"/>
    <id>http://kangsgo.com/766.html</id>
    <published>2017-09-24T05:08:02.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>本文转自:小ks强博客的<a href="http://www.cnblogs.com/kingstrong/p/5960466.html" target="_blank" rel="external">ubuntu16耳机没声音解决</a></p><p>由于需要用到GPU显卡用于 gromacs计算，但是装了CUDA驱动后就没有声音了，网上很多办法都没解决，今天看到这个方法完美解决</p><p>首先用在终端输入如下命令，安装pulseaudio音量控制软件</p><blockquote><p>sudo apt install pavucontrol</p></blockquote><p>终端输入指令pavucontrol，在配置中将HDA NVIDIA设置为关，下面设置为模拟立体声双工，如下图</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/13.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/13.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/13.png)</div>            </figure></p><p>然后在输出设备中选择模拟耳机，就可以听到声音啦</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/14.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/14.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/14.png)</div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文转自:小ks强博客的&lt;a href=&quot;http://www.cnblogs.com/kingstrong/p/5960466.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu16耳机没声音解决&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于需要用到GP
      
    
    </summary>
    
      <category term="杂项" scheme="http://kangsgo.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>VMD可视化粗粒化力场简单介绍</title>
    <link href="http://kangsgo.com/759.html"/>
    <id>http://kangsgo.com/759.html</id>
    <published>2017-09-23T04:22:18.000Z</published>
    <updated>2017-10-18T14:22:29.201Z</updated>
    
    <content type="html"><![CDATA[<p>此篇文章是简单的归纳总结官网的<a href="http://www.cgmartini.nl/index.php/tools2/visualization" target="_blank" rel="external">Rendering CG bonds &amp; constraints with VMD</a>, 查看的时候的时间为16 August 2017，请注意时效性。</p><p>该脚本分为两个版本，一个是<a href="http://www.cgmartini.nl/images/tools/VMD/cg_bonds.tcl" target="_blank" rel="external">gromacs5</a>以前版本，一个是<a href="http://www.cgmartini.nl/images/tools/VMD/cg_bonds-v5.tcl" target="_blank" rel="external">gromacs5</a>版本（包括2016），以下均以cg_bonds-v5.tcl为例</p><h4 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h4><p>使用的方法与VMD其他脚本类似，即source一下即可</p><blockquote><p>source /path/to/cg_bonds-v5.tcl</p></blockquote><p>现在脚本可以通过-top设置来读入.top和.itp文件</p><h4 id="cg-bonds："><a href="#cg-bonds：" class="headerlink" title="cg_bonds："></a>cg_bonds：</h4><p>-molid   “top”     VMD-defined ID of the molecule to process</p><p>-gmx      /usr/bin/gmxdump   gmxdump绝对路径的执行脚本，对于版本5，默认的为/usr/bin/gmx</p><p>-tpr         topol.tpr    顾名思义</p><p>-top         topol.top    顾名思义</p><p>-topoltype  “martini”    蛋白拓扑类型:”martini”,”elastic”,”elnedyn”</p><p>-net          “martini”       绘制网络:”martini”,”elastic”,”both”</p><p>-bndrcnstr    “both”       绘制键和/或约束”bonds”,”constraints”,”both”</p><p>-cutoff            7.0           键截距（埃）</p><p>-color           “red”           颜色名称或者VMD定义ID对于elastic 键</p><p>-mat              “Opaque”       对于elnedyn键的材料</p><p>-rad               0.2               elastic键半径</p><p>-res                6                 elastic键分辨率</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h4><blockquote><p><span style="color: #808080;">user@machine $</span> vmd protein.gro<br><span style="color: #808080;">vmd &gt;</span>  source /home/user/scripts/cg_bonds.tcl<br><span style="color: #808080;">vmd &gt;</span>  cg_bonds -top system.top -topoltype “elastic”<br><span style="color: #808080;">vmd &gt;</span>  cg_bonds -gmx /home/user/bin/gmx-4.5.4/bin/gmxdump -tpr dyn.tpr -net “elastic” -cutoff 12.0 -color “orange” -mat “AOChalky” -res 12 -rad 0.1 -topoltype “elastic”<br><span style="color: #808080;">vmd &gt;</span> cg_delete_elastic_bonds</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此篇文章是简单的归纳总结官网的&lt;a href=&quot;http://www.cgmartini.nl/index.php/tools2/visualization&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rendering CG bonds &amp;amp; c
      
    
    </summary>
    
      <category term="绘图与可视化" scheme="http://kangsgo.com/categories/%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="VMD" scheme="http://kangsgo.com/tags/VMD/"/>
    
      <category term="粗粒化" scheme="http://kangsgo.com/tags/%E7%B2%97%E7%B2%92%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>不同软件中参数单位</title>
    <link href="http://kangsgo.com/755.html"/>
    <id>http://kangsgo.com/755.html</id>
    <published>2017-09-21T04:49:47.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>看了贾壮老师的博文<a href="http://kangsgo.com/725.html">Gromacs中添加CHARMM力场</a>发现不同软件的力场数值是不一样的，进一步分析可以发现就是单位的变化导致的，所以在这里总（chao）结（xi）常用的力场软件使用的单位。</p><p>以下是常用的单元系统</p><p>UnitSystem         Length unit     Mass unit     Time unit     Charge unit  Temperature    Amount unit   Energy unit</p><p>si_unit_system          meters           kilograms        second        Ampere         Kelvin                  mole              joule</p><p>cgs_unit_system      centimeters      gram              second       Ampere          Kelvin                   mole          1e-7 joule</p><p>md_unit_system     nanometers      daltons       picosecond    q electron      Kelvin                    mole             kilojoule</p><p>planck_unit_system     pl. length     pl.  mass    pl.  time     pl. charge   pl. temperature         item               pl. energy</p><p>akma_unit_system     angstroms      daltons       akma time    q  electron    Kelvin                   mole              kilocalorie</p><p>以下为常用软件以及其单元系统:</p><p>软 件                              单元系统</p><p>AMBER                          akma_unit_system</p><p>CHARMM                       akma_unit_system</p><p>Tinker                           akma_unit_system</p><p>Desmond                       akma_unit_system</p><p>LAMMPS                        akma_unit_system</p><p>NAMD                            akma_unit_system</p><p>AceMD                           akma_unit_system</p><p>OpenMM                          md_unit_system</p><p>Gromacs                          md_unit_system</p><p>Gromos                            md_unit_system</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看了贾壮老师的博文&lt;a href=&quot;http://kangsgo.com/725.html&quot;&gt;Gromacs中添加CHARMM力场&lt;/a&gt;发现不同软件的力场数值是不一样的，进一步分析可以发现就是单位的变化导致的，所以在这里总（chao）结（xi）常用的力场软件使用的单位。&lt;
      
    
    </summary>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>linux安装GAUSSIAN 09（G09）和GVIEW简略版</title>
    <link href="http://kangsgo.com/83.html"/>
    <id>http://kangsgo.com/83.html</id>
    <published>2017-09-13T09:50:28.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>首发时间: 2015年12月9日</p><p>更新时间:2017年9月13日</p><h3 id="一、安装Linux版Gaussian"><a href="#一、安装Linux版Gaussian" class="headerlink" title="一、安装Linux版Gaussian"></a>一、安装Linux版Gaussian</h3><p>例如安装在<strong>/home/kangsgo/install/g09</strong>下，下同</p><p>首先解压</p><blockquote><p>unzip gaosi09-D01.zip</p><p>mv g09D01 g09</p><p>cd g09</p><p>mkdir scratch</p><p>gedit ~/.bashrc</p></blockquote><p>在里面加入</p><blockquote><p>export g09root=/home/kangsgo/install</p><p>export GAUSS_SCRDIR=/home/kangsgo/install/g09/scratch</p><p>source /home/kangsgo/install/g09/bsd/g09.profile</p></blockquote><p>接下来可以在/home/kangsgo/g09/Default.Route中设置默认参数（需要自己创建），如：</p><blockquote><p>-M- 12000MB</p><p>-P- 8</p></blockquote><p>在<strong>/home/kangsgo/install/g09/</strong>目录下运行：</p><blockquote><p>chmod 750 -R *</p><p>source ~/.bashrc</p></blockquote><p>大工告成！</p><p>本段来自于：<a href="http://bbs.keinsci.com/thread-5493-1-1.html" target="_blank" rel="external">计算化学公社</a></p><h3 id="二、安装gview"><a href="#二、安装gview" class="headerlink" title="二、安装gview"></a>二、安装gview</h3><p>在.bashrc末尾加上以下内容:</p><blockquote><p>export GV_DIR=/home/kangsgo/install/g09/gv/<br>export LIBPATH=/home/kangsgo/install/g09/gv/lib<br>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/kangsgo/install/g09/gv/lib<br>PATH=$PATH:/home/kangsgo/install/g09/gv/</p></blockquote><p>转载自：<a href="http://bbs.keinsci.com/thread-5493-1-1.html" target="_blank" rel="external">计算化学公社</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首发时间: 2015年12月9日&lt;/p&gt;
&lt;p&gt;更新时间:2017年9月13日&lt;/p&gt;
&lt;h3 id=&quot;一、安装Linux版Gaussian&quot;&gt;&lt;a href=&quot;#一、安装Linux版Gaussian&quot; class=&quot;headerlink&quot; title=&quot;一、安装Linux
      
    
    </summary>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>amber非标准残基生成的小坑</title>
    <link href="http://kangsgo.com/748.html"/>
    <id>http://kangsgo.com/748.html</id>
    <published>2017-09-13T07:10:59.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>由于gromacs需要二面角参数，然而文献中给的CHARMM力场的二面角力场不够，正好看到amber有非标准残基的制作，所以想看一下能不能出坑，没想到一坑比一坑高，爬出一个坑又掉进另外一个坑，坑坑相连，所以在这里把amber非标准残基的小坑给理清楚，给后来人，当然等我非标准氨基酸残基系统的跑完以后会分享给大家完整的流程，大家同样可以看一下是否可以跑出来。</p><h4 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h4><p>在使用如下命令生成bcc电荷时发生了报错</p><blockquote><div class="code_box">antechamber -fi ccif -i CRO.cif -bk CRO -fo ac -o cro.ac -c bcc -at amber</div></blockquote><div>错误信息如下：</div><blockquote><div>/Residue CRO has a type of LINKING. Quitting/</div></blockquote><div>解决办法为删除含有LINKING那一行。</div><div></div><h4 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h4><div></div><div>但是有出现了另外一个问题</div><blockquote><div>processor.acdoctor mode is on: check and diagnosis problems in the input<br>file.antechamber: mmcif.c:70: rmmcif: Assertion `col2 &gt;= 0’ failed.Aborted<br>(core dumped)*</div></blockquote><div>这个问题在2017年8月提交的错误邮件，所以说应该是AmberTools17工具新的问题，可能老版本没有问题</div><div></div><div>这个解决办法稍微复杂一些，方法如下:</div><div>在<strong>$AMBERHOME/AmberTools/src/antechamber</strong> 下的<strong>mmcif.c</strong>中的第68行那一段进行编辑，可以对那一段使用<strong>*</strong>进行注释，</div><div>然后在该目录下进行重新编译</div><blockquote><div>make install</div></blockquote><div>至此两个问题都可以得到解决，跑出来的文件也是一样的。</div><div></div><div></div><div>参考:<a href="http://archive.ambermd.org/201608/0419.html" target="_blank" rel="external">[AMBER] Tutorial B5 - Loading CRO from ccif file</a></div><div>       <a href="http://archive.ambermd.org/201708/0312.html" target="_blank" rel="external"> [AMBER] Error while running antechamber for modified amino acid residue</a></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于gromacs需要二面角参数，然而文献中给的CHARMM力场的二面角力场不够，正好看到amber有非标准残基的制作，所以想看一下能不能出坑，没想到一坑比一坑高，爬出一个坑又掉进另外一个坑，坑坑相连，所以在这里把amber非标准残基的小坑给理清楚，给后来人，当然等我非标准
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/Gromacs/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>[转载]amber中非标准氨基酸残基的参数生成</title>
    <link href="http://kangsgo.com/746.html"/>
    <id>http://kangsgo.com/746.html</id>
    <published>2017-09-13T03:38:06.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>转载自:李思琪的博客，由于没有联系上作者未授权，自己的在写，写完就删除该转载：<a href="http://blog.csdn.net/sinat_23241095/article/details/53836200" target="_blank" rel="external">http://blog.csdn.net/sinat_23241095/article/details/53836200</a></p><p>在amber教程中给出了相关的教程，具体流程都是根据这个教程来制作的。</p><p><a href="http://ambermd.org/tutorials/basic/tutorial5/" target="_blank" rel="external">http://ambermd.org/tutorials/basic/tutorial5/</a></p><p>但是他的电荷使用的是bcc电荷，但是并没有介绍如何把电荷转换为resp。</p><p>流程：</p><p>0.在pdb数据库中搜索残基名称，选择 ligand id 进行下载对应的cif文件；</p><p>1.antechamber -fi ccif -i CRO.cif -bk CRO -fo gcrt -o cro.gjf -ch “cro.chk” -gm “%mem=2048MB” -gn “%nproc=24” -nc 0 #直接将下载的cif转为高斯输入文件，进行高斯计算；</p><p>2.antechamber -fi ccif -i CRO.cif -bk CRO -fo ac -o cro_step1.ac -at amber #和教程上一致，目的为了生成参照的ac文件，-at 必须制定，否则原子类型默认gaff；</p><p>3.antechamber -fi gout -i cro.log -rn CRO -fo ac -o cro_step2.ac -c resp -at amber #赋予resp电荷到新的ac文件中；</p><p>4.文本操作将cro_step2.ac中的坐标以及电荷信息列覆盖到cro_step1.ac中，同时修改主链N原子的原子类型从NT到N，保存为cro_step3.ac；</p><p>5.制作mc文件，格式如下图，参照cro_step3.ac文件制作；</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20161223104949294?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2luYXRfMjMyNDEwOTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>6.prepgen -i cro_step3.ac -o cro.prepin -m cro.mc -rn CRO #得到主链信息文件；</p><p>7.parmchk2 -i cro.prepin -f prepi -p frcmod.cro -a Y -p $AMBERHOME/dat/leap/parm/parm10.dat #检查生成的参数信息，查看frcmod文件，若其中出现某一行参数为0且有 “ATTN,need revision” 标识则说明在parm10.dat中参数不完整需要用gaff进行补充；</p><p>8.grep -v “ATTN” frcmod.cro &gt; frcmod1.cro #剔除不包含的参数，其余存成参数文件；</p><p>9.parmchk2 -i cro.prepin -f prepi -o frcmod2.cro #剩余的参数利用gaff生成参数，由于命令中没有指定 “-a Y” 则只生成了原力场中未包含的参数文件；</p><p>10.在leap中导入文件即可，loadamberprep cro.prepin ，loadamberparams frcmod1.cro ,loadamberparams frcmod2.cro ,对蛋白无需额外处理，（需要去除H，pdb4amber）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自:李思琪的博客，由于没有联系上作者未授权，自己的在写，写完就删除该转载：&lt;a href=&quot;http://blog.csdn.net/sinat_23241095/article/details/53836200&quot; target=&quot;_blank&quot; rel=&quot;extern
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/Gromacs/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>Amber17的安装</title>
    <link href="http://kangsgo.com/77.html"/>
    <id>http://kangsgo.com/77.html</id>
    <published>2017-09-10T23:56:01.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>首次版本:2015-12-3</p><p>更新日期:2017-9-11</p><p>首先您可能需要安装<a href="http://kangsgo.com/40.html">CUDA</a>和<a href="http://kangsgo.com/31.html">Openmpi</a> 这里就不再详细说明，您阅读这篇文章时默认已经安装了这两个</p><p>我们以将amber安装在/home/kangsgo/mdinstall/md下为例：</p><h4 id="1-进入目录："><a href="#1-进入目录：" class="headerlink" title="1.进入目录："></a>1.进入目录：</h4><blockquote><p>cd /home/kangsgo/mdinstall/md</p></blockquote><h4 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h4><blockquote><p>tar xvfj AmberTools17.tar.bz2<br>tar xvfj Amber16.tar.bz2</p><p>#（注意：amber16需要购买,购买amber16后可以使用GPU加速，价格为500美金）</p><p>#（注意:虽然AmberTools17，但解压以后为amber16文件夹）</p></blockquote><h4 id="3-设置环境变量："><a href="#3-设置环境变量：" class="headerlink" title="3.设置环境变量："></a>3.设置环境变量：</h4><blockquote><p>export AMBERHOME=/home/kangsgo/mdinstall/md/amber16   # (for <span style="color: #ff0000;">bash</span>,<span style="color: #ff0000;">zsh</span>,ksh,etc.)</p><p><del>setenv AMBERHOME /home/kangsgo/mdinstall/md/amber16  # (for csh,tcsh 一般不是这些终端)</del></p></blockquote><h4 id="4-预编译："><a href="#4-预编译：" class="headerlink" title="4.预编译："></a>4.预编译：</h4><blockquote><p>sudo apt-get install csh flex gfortran g++ xorg-dev \<br>zlib1g-dev libbz2-dev patch python-tk python-matplotlib</p></blockquote><h4 id="5-进入目录："><a href="#5-进入目录：" class="headerlink" title="5.进入目录："></a>5.进入目录：</h4><blockquote><p>cd $AMBERHOME（也可以输入：/home/kangsgo/mdinstall/md/amber16 绝对路径）</p></blockquote><h4 id="6-设置"><a href="#6-设置" class="headerlink" title="6.设置"></a>6.设置</h4><p>一般采用默认安装即可：</p><blockquote><p>./configure gnu</p><h1 id="提示安装miniconda选择安装-不会与自己安装的conda发生冲突，因为其不会写入环境变量"><a href="#提示安装miniconda选择安装-不会与自己安装的conda发生冲突，因为其不会写入环境变量" class="headerlink" title="(提示安装miniconda选择安装,不会与自己安装的conda发生冲突，因为其不会写入环境变量)"></a>(提示安装miniconda选择安装,不会与自己安装的conda发生冲突，因为其不会写入环境变量)</h1><h1 id="若是编写脚本安装可以输入yes自动接收协议，如下"><a href="#若是编写脚本安装可以输入yes自动接收协议，如下" class="headerlink" title="若是编写脚本安装可以输入yes自动接收协议，如下"></a>若是编写脚本安装可以输入yes自动接收协议，如下</h1><p>yes | ./configure gnu</p></blockquote><p>这一步不要安装并行选项，并行需要在后面第10步再进行安装。</p><h4 id="7-设置环境变量："><a href="#7-设置环境变量：" class="headerlink" title="7.设置环境变量："></a>7.设置环境变量：</h4><blockquote><p>source /home/kangsgo/mdinstall/md/amber16/amber.sh # for bash, zsh, ksh, etc.<br>source /home/kangsgo/mdinstall/md/amber16/amber.csh # for csh, tcsh</p></blockquote><h4 id="8-安装："><a href="#8-安装：" class="headerlink" title="8.安装："></a>8.安装：</h4><blockquote><p>make install</p></blockquote><p>如果你没有amber16，那么最后会显示</p><p>/home/kangsgo/install/amber16/src/Makefile not found, or -noamber was set.</p><p>这是正常现象</p><h4 id="9-测试："><a href="#9-测试：" class="headerlink" title="9.测试："></a>9.测试：</h4><blockquote><p>make test</p></blockquote><p>注:这一步我报错了，但是终端给了提示</p><p>test -f /home/kangsgo/install/amber16/amber.sh &amp;&amp; source /home/kangsgo/install/amber16/amber.sh</p><p>输入以上命令后再 make test就成功了</p><p>这一步时间较久，可以能1个小时还没有完成，特别是经常屏幕没有反应这是正常现象不需要惊慌。</p><h4 id="10-设置环境变量"><a href="#10-设置环境变量" class="headerlink" title="10.设置环境变量"></a>10.设置环境变量</h4><p>以下是我自己的写法:</p><blockquote><p>source /home/kangsgo/install/amber16/amber.sh</p></blockquote><h4 id="11-多线程的安装"><a href="#11-多线程的安装" class="headerlink" title="11.多线程的安装"></a>11.多线程的安装</h4><p>“由于未用到，只是照搬教程”</p><blockquote><p>cd $AMBERHOME</p><p>./configure -mpi &lt;…other options…&gt;&lt;compiler-choice&gt;</p><p>make install</p><p>export DO_PARALLEL=”mpirun -np 2”  #核心数可以修改</p><p>make test</p></blockquote><p>&nbsp;</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2015/12/1.png" alt="1](http://kangsgo.com/wp-content/uploads/2015/12/1-717x1024.png)" title="">                </div>                <div class="image-caption">1](http://kangsgo.com/wp-content/uploads/2015/12/1-717x1024.png)</div>            </figure></p><p>参考文献：Amber17官方教程</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首次版本:2015-12-3&lt;/p&gt;
&lt;p&gt;更新日期:2017-9-11&lt;/p&gt;
&lt;p&gt;首先您可能需要安装&lt;a href=&quot;http://kangsgo.com/40.html&quot;&gt;CUDA&lt;/a&gt;和&lt;a href=&quot;http://kangsgo.com/31.html&quot;&gt;O
      
    
    </summary>
    
      <category term="分子模拟" scheme="http://kangsgo.com/categories/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>[转载]Gromacs中添加CHARMM力场</title>
    <link href="http://kangsgo.com/725.html"/>
    <id>http://kangsgo.com/725.html</id>
    <published>2017-09-07T12:05:36.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>转自贾壮老师博客:<a href="http://blog.sciencenet.cn/blog-794272-718384.html" target="_blank" rel="external">http://blog.sciencenet.cn/blog-794272-718384.html</a></p><p>待整理</p><p>CHARMM力场提供了很多生物分子的力场参数，如蛋白质、脂质、核酸等，Gromacs中自带了CHARMM27力场，当然也可在Gromacs官网上下载到已转换成Gromacs支持的CHARMM36力场。不过使用Gromacs做MD模拟的朋友如果想模拟一个Gromacs中没有定义力场参数的分子，如糖，就需要手动为Gromacs添加相关力场参数了。这些力场参数多数从文献中得到，并且一般都是CHARMM格式的，即.prm 和 .rtf 格式，如何将它们转换成Gromacs支持的格式呢？这篇文章会详细讲解转换过程，并且给出python脚本以供参考。</p><p>首先分别讲解一下CHARMM软件和Gromacs软件如何完整定义一个分子的力场。在CHARMM软件中，主要通过2个文件来实现：.rtf 和.prm。</p><p>.rtf 文件定义了原子类型、各类型原子的质量、原子偏电荷、分子的键连接以及氢键等，它的格式如图1。MASS是用来定义原子类型的，每一行都定义了一种原子类型。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155104802mdy8wueeq0yuu.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><em>图<strong>1. TIP3</strong>水分子的<strong> .rtf </strong>文件，<strong>CHARMM</strong>中<strong>“</strong>！<strong>”</strong>后面的内容是注释</em></p><p>MASS后面跟着原子编号、原子类型名、原子质量和元素符号。GROUP语句用来定义一个残基（也可以是单独的分子）：ATOM定义了残基中各原子的名字、所属的原子类型和该原子所带的偏电荷；BOND定义残基中原子的键连接情况，以原子对形式列出，如图1中的水分子定义了3个键OH2-H1、OH2-H2和H1-H2（最后一个键是SHAKE限制算法用到的）；ANGLE定义键角；DONOR和ACCEPTOR分别用来定义氢键供体和受体。</p><p>.prm文件中定义了与能量相关的参数，如键伸缩能，键角、二面角的力常数以及范德华参数，图2给出了TIP3水分子的 .prm 文件。</p><p>BONDS数据块是用来定义键伸缩振动能量的，用简谐振动来近似：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155126rc41nd4derds14en.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>BONDS数据块每行有4个字段，前两个是成键原子的类型，后两个分别是公式中的K<sub>b</sub>（kcal/Å<sup>2</sup>/mol）和b<sup>0</sup>（Å）。</p><p>ANGLES数据块用来定义键角振动，同样是用简谐振动来近似：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155140ttg36s3j33ssb633.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155156zxkw0xldkbbiwxq6.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>ANGLES数据每行有5或7个字段，后者是加了Urey-Bradley项的。前3项是形成键角的原子的类型，后面4项分别对应公式中的K<sub>θ</sub>（kcal/度<sup>2</sup>/mol）、θ<sub>0</sub>（度）、K<sub>UB</sub>（kcal/Å<sup>2</sup>/mol）和b<sup>1-3,0</sup>（Å）。</p><p>关于Urey-Bradley项的解释可以查看gromacs手册:<a href="http://jerkwin.github.io/GMX/GMXman-4/#428-urey-bradley势" target="_blank" rel="external">http://jerkwin.github.io/GMX/GMXman-4/#428-urey-bradley势</a></p><p>DIHEDRALS数据块用来定义二面角振动，用余弦函数来近似：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155208l6b0miozlq3rlngl.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>DIHEDRALS数据块每行有7个字段，前4项是形成二面角的原子的类型，后面3项分别对应公式中的K<sub>φ</sub>（kcal/mol）、n（无单位）和δ（度）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155223tedrsdetdiy16zhq.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><em>图<strong>2. TIP3</strong>水分子的<strong> .prm </strong>文件</em></p><p>IMPROPER数据块用来保证分子中原子共平面的，用简谐振动近似：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155247opohhnzjijzjoonl.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>IMPROPER数据块每行有7个字段，前4项是形成二面角的原子的类型，第5项对应公式中的Kω（kcal/度<sup>2</sup>/mol），第6项一般是0，暂时不知道干嘛用的，第7项对应公式中的ω0（度）。</p><p>NONBONDED数据块用来定义非键作用，其中静电力可通过原子偏电荷求得，不需要额外参数，范德华力通常用L-J形式来描述：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155258etq3vnb3kq5qtws4.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>通常力场中只定义单个原子的ε和r<sup>min</sup>，成对原子的范德华力参数可以通过组合规则（combination rule）获得，常用的组合规则是ε<sub>i,j</sub> = sqrt(ε<sub>i</sub>×ε<sub>j</sub>)，r<sup>min</sup><sub>i,j</sub> = (r<sup>min</sup><sub>i</sub>+ r<sup>min</sup><sub>j</sub>)/2。另外CHARMM力场将1-4作用单独分出来描述，也采用L-J形式，只是ε和r<sup>min</sup>值有所不同。NONBONDED数据块每行有7个字段组成，第1个字段是原子类型，第2、5字段标识为ignored，通常是0，暂不知道干嘛用的，第3，4字段分别为vdw力的ε（kcal/mol）和r<sup>min</sup>/2（Å），第6，7字段分别为1-4作用的ε（kcal/mol）和r<sup>min</sup>/2（Å）。这里可以提前说明一下，Gromacs中1-4作用是以原子对的形式定义的，叫做pairtypes，转换时需要将CHARMM中的1-4作用通过组合规则两两组合生成pairtypes，这在后面还会详细讲到。</p><p>下面讲一下Gromacs中力场文件的格式。Gromacs主要通过5个文件来定义：.rtp、.hdb、atomtypes.atp、ffbonded.itp和ffnonbonded.itp。</p><p>.rtp文件用来定义残基（或分子）中原子所属的类型、原子偏电荷、键连接以及共平面原子，其余如键角和二面角是在这里不是必须的，程序一般通过原子类型生成，它将出现在ffbonded.itp文件中。图3是 .rtp 文件的一个示例，里面的注释很详尽，唯一需要说</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/1553175bacyapcuc1eaa6u.jpg" alt="tmp.png" title="">                </div>                <div class="image-caption">tmp.png</div>            </figure><p><em>图<strong>3. </strong>甘氨酸的<strong> .rtp </strong>文件，<strong>Gromacs</strong>中<strong>“</strong>;<strong>”</strong>后的内容是注释</em></p><p>明的是chargegroup项，同一个chargegroup中的原子偏电荷变化是以相同比例进行的，对于一个新加入的分子可简单的将每个原子划分到不同的chargegroup中。</p><p>.hdb文件是用来给残基（或分子）加氢的，我们知道用X-衍射得到的蛋白结构中一般没有氢，pdb2gmx命令会查询.hdb文件中定义的加氢规则为蛋白加氢。如果你的小分子中氢原子已在 .rtp文件中定义了，就不需要用 .hdb文件来加氢。因为一般力场中都会详细定义蛋白各种参数，我们只需添加一些小分子，而小分子中的氢原子多在 .rtp文件中定义，很少用到 .hdb文件，所以这里不再讲 .hdb文件格式。</p><p>atomtypes.atp文件中定义了力场中用到的所有原子类型，格式很简单，第一列是原子类型名，第二列是原子质量，如果你添加的分子用到了新的原子类型，就需要在这里添加相关信息。</p><p>ffbonded.itp文件定义了力场中的键作用：键伸缩振动、键角、二面角振动（func=9）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155334z4ydem0f8grpkedf.gif" alt="捕获.PNG" title="">                </div>                <div class="image-caption">捕获.PNG</div>            </figure><p><em>图<strong>4. ffbonded.itp</strong>文件格式</em></p><p>以及IMPROPER（在Gromacs中称为dihedraltypes（func=2））。它们定义及算法与CHARMM中相同，只是公式的形式以及单位有差异：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155354w6r7wujct7qt7w3l.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155407c18kiqc06iq7ssmc.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155418b17q1e1aceaeet1y.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155430is5p2lsjj1fggj0g.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>公式的差异表现在键长、键角、IMPROPER的简谐振动公式在Gromcas中多了一个系数1/2；单位的差异表现在CHARMM中能量单位为kcal，而Gromcas中使用kJ，CHARMM中长度单位为Å，而Gromacs中使用nm。参数从CHARMM转换到Gromacs规则如下：</p><p>（1）       键伸缩振动：K<sub>gromacs</sub>= 2×K<sub>charmm</sub>×cal2j×100 （即K<sub>gromacs</sub> = 836.8×K<sub>charmm</sub>，其中cal2j =4.184是cal转换到J的转换系数）；b<sup>0</sup><sub>gromacs</sub> = b<sup>0</sup><sub>charmm</sub>/10。</p><p>（2）       键角振动：K<sup>θ</sup><sub>gromacs</sub> = 2×K<sup>θ</sup><sub>charmm</sub>×cal2j（即K<sup>θ</sup><sub>gromacs</sub> = 8.368×K<sup>θ</sup><sub>charmm</sub>）；θ<sub>0</sub>不变；K<sup>UB</sup><sub>gromacs</sub> = 2×K<sup>UB</sup><sub>charmm</sub>×cal2j×100（即K<sup>UB</sup><sub>gromacs</sub> = 836.8×K<sup>UB</sup><sub>charmm</sub>）；b<sup>U</sup><sub>gromacs</sub> = b<sup>U</sup><sub>charmm</sub>/10。</p><p>（3）       二面角振动：K<sup>φ</sup><sub>gromacs</sub> = K<sup>φ</sup><sub>charmm</sub>×cal2j（即K<sup>φ</sup><sub>gromacs</sub> = 4.184×K<sup>φ</sup><sub>charmm</sub>）；n和φ<sup>0</sup>不变。</p><p>（4）       IMPROPER:K<sup>ξ</sup><sub>gromacs</sub> = 2×K<sup>ξ</sup><sub>charmm</sub>×cal2j（即K<sup>ξ</sup><sub>gromacs</sub> = 8.368×K<sup>ξ</sup><sub>charmm</sub>）；ξ<sup>0</sup>不变。</p><p>值得注意的是这些参数在文件中位值不同，一定要弄清哪一列放哪个参数！</p><p>ffnonbonded.itp定义了力场中的非键作用，因静电力可通过原子偏电荷和coulomb公式求的，所以这个文件主要定义范德华力（在atomtypes数据块中）。与CHARMM类似，Gromacs也对1-4作用进行单独处理，处理方式与CHARMM完全相同，1-4作用定义在pairtypes数据块中。Gromacs中描述范德华力的L-J公式与CHARMM中也有差异：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155447itq000zisllzs720.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在转换之前我们需将CHARMM和Gromacs中的L-J公式化成相同的形式：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/1555024patlhddbywtwiyd.gif" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>非键作用的参数转换规则如下：</p><p>ε<sub>gromacs</sub> = -ε<sub>charmm</sub>×cal2j（即ε<sub>gromacs</sub> = -4.184×ε<sub>charmm</sub>，不知道问什么CHARMM中加了负号）</p><p>σ<sub>gromacs</sub> = 2×σ<sub>charmm</sub>/10/2<sup>1/6</sup>（即σ<sub>gromacs</sub> = 0.1781797436×σ<sub>charmm</sub>，CHARMM中记录的是r<sup>min</sup>/2）</p><p>对于1-4作用，转换规则同上，只是Gromacs中通过组合规则（上文讲CHARMM时有提到）以原子对的形式记录在pairtypes数据块中，这需要自己计算添加。图5给出了一个转换示例，注意pairtypes是通过两两组合计算得到的，不区分先后，共6对。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://image.sciencenet.cn/album/201308/20/155525i4nn1z7imk7nz71d.gif" alt="convert.PNG" title="">                </div>                <div class="image-caption">convert.PNG</div>            </figure><p><em>图<strong>5. </strong>非键作用转换示例</em></p><p>对于简单分子可以手动转换并添加到Gromacs力场中，但是当分子较为复杂时手动转换将会变得非常繁琐并且容易出错，这时候就需要用脚本来进行批量处理。附件提供了用python写的转换脚本：</p><p>cvt_bd.py: 键伸缩项转换，输入文件bonds，输出文件bonds.out</p><p>cvt_agl.py: 键角转换，输入文件angles，输出文件angles.out</p><p>cvt_dihedral.py: 二面角转换，输入文件dihedrals，输出文件dihedrals.out</p><p>cvt_improper.py: improper项转换，输入文件impropers，输出文件impropers.out</p><p>cvt_nb.py: 非键作用转换，输入文件nobonded，输出文件vdw.out, pair.out</p><p>使用方法：</p><p>将.prm文件按数据块分成bonds（记录BONDS数据块）、angles（记录ANGLES数据块）、dihedrals（记录DIHEDRALS数据块）、impropers（记录IMPROPER数据块）和nonbonded（记录NONBONDED数据块）5个文件，然后按下面步骤处理：</p><p>（1）删除关键字BONDS、ANGLES、DIHEDRALS、IMPROPER和NONBONDED所在的行。</p><p>（2）删除“！”及其后面的注释内容，这可以在vim中使用命令：</p><p>:%s/!.*//</p><p>（3）删除行末多余的空格，可用vim命令：</p><p>:%s/ *$//</p><p>（4）删除空行，vim命令：</p><p>:g/^$/d</p><p>处理后的文件应该是每行具有相同列数（angles和nonbonded各行列数不全相同），格式一致的文本。然后运行上面的python脚本，将输出文件拷贝到ffbonded.itp和ffnonbonded.itp文件中对应的数据块内：</p><p>（1）bonds.out内容拷贝到ffbonded.itp文件[bondtypes]数据域中</p><p>（2）angles.out内容拷贝到ffbonded.itp文件[angletypes]数据域中</p><p>（3）dihedrals.out内容拷贝到ffbonded.itp文件[dihedraltypes] （func=9）数据域中</p><p>（4）impropers.out内容拷贝到ffbonded.itp文件[dihedraltypes]（func=2）数据域中</p><p>（5）vdw.out内容拷贝到ffnonbonded.itp文件[atomtypes]数据域中</p><p>（6）pair.out内容拷贝到ffnonbonded.itp文件[pairtypes]数据域中</p><p>（7）vdw.out的1、3列内容拷贝到atomtypes.atp文件中</p><p>最后根据 .rtf 文件中记录的残基（或分子）原子类型、偏电荷、键连接和IMPROPER信息，按照Gromacs的 .rtp文件格式制做该残基（或分子）的 .rtp文件，将该文件放到相应的力场文件目录下（即ffbonded.itp所在目录）。最后提醒大家，分子的pdb文件一定要与 .rtp文件原子顺序和命名完全一致！</p><p>以上所有操作都正确的话就可以用Gromacs模拟该分子了，Happy simulating！</p><p><a href="http://blog.sciencenet.cn/home.php?mod=attachment&amp;id=40649" target="_blank" rel="external">convert_script.rar</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转自贾壮老师博客:&lt;a href=&quot;http://blog.sciencenet.cn/blog-794272-718384.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.sciencenet.cn/blog-794272
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
    
  </entry>
  
  <entry>
    <title>Gromacs如何添加非标准残基进入力场</title>
    <link href="http://kangsgo.com/722.html"/>
    <id>http://kangsgo.com/722.html</id>
    <published>2017-09-07T06:56:48.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近在捣鼓一个蛋白，而蛋白内包含有标准残基，弄了许久也没弄进去，谷歌的时候找到一个gromacs添加力场的流程，故简单翻译一遍分享给大家，若需要查看完整的内容可以移步官网:<a href="http://www.gromacs.org/Documentation/How-tos/Adding_a_Residue_to_a_Force_Field" target="_blank" rel="external">http://www.gromacs.org/Documentation/How-tos/Adding_a_Residue_to_a_Force_Field</a></p></blockquote><p>如果你有新的残基想要放入已存在的力场文件中，从而使得可以使用已经存在pdb2gmx文件或者修正已经存在的一个，这有几个文件你需要进行修改。当然你需要仔细的查看手册中对与格式的要求。具体下来有如下几步:</p><ol><li>在你选择的相应力场中的<code>.rtp</code>文件中增加残基，你可以copy已经存在的残基，重命名以后在进行修改，或者你可以使用额外的拓扑生成工具来适应.rtp文件的格式。</li><li>如果你需要对你的新定义残基进行加氢，你可以创建紧密相关的内容至<code>.hdb</code>文件</li><li>如果你拥有新的原子类型，增加进入<code>atomtypes.atp</code>和<code>ffnonbonded.itp</code>文件</li><li>如果你有新的键类型，增加进入<code>ffbonded.itp</code>文件中</li><li>增加你的残基进入<code>resudetypes.dat</code>文件并且指定类型（Protein,DNA，Ion等等）</li><li>如果你的残基设计特别的connectivity到其它残基，升级<code>specbond.dat</code>文件<br>特别提醒的是如果仅仅是一个配体的话建议使用配体教程的方法而不是使用这个方法，这个方法会对力场造成污染，而且麻烦。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;最近在捣鼓一个蛋白，而蛋白内包含有标准残基，弄了许久也没弄进去，谷歌的时候找到一个gromacs添加力场的流程，故简单翻译一遍分享给大家，若需要查看完整的内容可以移步官网:&lt;a href=&quot;http://www.gromacs.org/Docume
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
    
  </entry>
  
  <entry>
    <title>一个快速修改PDB中残基编号的脚本</title>
    <link href="http://kangsgo.com/717.html"/>
    <id>http://kangsgo.com/717.html</id>
    <published>2017-09-06T08:47:09.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>不知道他家有没有遇到一个这样的问题，比如我同源建模构建了氨基酸序列200-300的蛋白，但是其建模后蛋白还是会从1开始标注，这在一些绘图和分析的时候非常不方便，需要计算相应的残基编号的改变。又比如晶体结构或者蛋白存在一些缺失，使得残基序列发生跳段，遗憾的是同源建模并不能使得其智能的残基序列跳段，以前我一直使用的是Wincoot，但是安装比较麻烦，而且为了这么一功能安装这么大的网站有点“大材小用”。故写了这么一个献丑的小工具。</p><p>使用方法(python 3.6测试可用):</p><p>python residueid.py -h</p><p>[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://kangsgo.com/wp-content/uploads/2017/09/1.png" alt="](http://kangsgo.com/wp-content/uploads/2017/09/1.png)" title="">                </div>                <div class="image-caption">](http://kangsgo.com/wp-content/uploads/2017/09/1.png)</div>            </figure></p><p>示例:</p><p>python residueid.py -f gfp.pdb -n 65 -a 3 -s 23 -na -1406</p><p>脚本下载地址:</p><p><a href="https://pan.baidu.com/s/1i5QmkSl" target="_blank" rel="external">https://pan.baidu.com/s/1i5QmkSl</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知道他家有没有遇到一个这样的问题，比如我同源建模构建了氨基酸序列200-300的蛋白，但是其建模后蛋白还是会从1开始标注，这在一些绘图和分析的时候非常不方便，需要计算相应的残基编号的改变。又比如晶体结构或者蛋白存在一些缺失，使得残基序列发生跳段，遗憾的是同源建模并不能使得
      
    
    </summary>
    
      <category term="杂项" scheme="http://kangsgo.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Pymol小脚本之Rotkit</title>
    <link href="http://kangsgo.com/714.html"/>
    <id>http://kangsgo.com/714.html</id>
    <published>2017-09-05T12:25:21.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>Rotkit是一个pymol小脚本工具包，依稀记得还是大四的时候有人在bioms群里出售一个脚本，可以将配体周围的氨基酸残基进行突变，然后进行突变对接或者分析，来简单的查看突变对配体与蛋白之间的相互影响。当时觉得非常的高达上，今天查看Pymol的时候发现这个小脚本就可以非常容易的实现这个功能，当然pymol的功能不仅仅如此，还有更多的功能。</p><p>这个脚本套件是一个小的脚本合集，能够精确的将小分子放在你想要的蛋白质上。（虽然官方介绍这么说，但是还是要强调一下功能远不止如此）</p><h3 id="PyMOL可用的脚本功能"><a href="#PyMOL可用的脚本功能" class="headerlink" title="PyMOL可用的脚本功能"></a>PyMOL可用的脚本功能</h3><pre class="EnlighterJSRAW" data-enlighter-language="python">rotateline(Pos1,Pos2,degangle,molecule):     "Pos1&gt;Pos2"定义了一个“分子”将旋转“degangle”的度数      rotateline Pos1=P513C_CA, Pos2=P513C_CB, degangle=5, molecule=Atto590     rotateline Pos1=dyeatom87, Pos2=dyeatom85, degangle=10, molecule=Atto590mutate(molecule,chain,resi,target="CYS",mutframe="1"):    突变目标一个/分子/链/残基，并且选择最可能的帧     mutate 1HP1, chain=A, resi=515, target=CYS, mutframe=1toline(Pos1,Pos2,atom,molecule,dist=1):    平移分子原子，1 埃的距离，方向为Pos1&gt;Pos2    toline Pos1=P513C_CA, Pos2=P513C_CB, atom=dyeatom87, molecule=Atto590, dist=3</pre><h4 id="通过rotkit-functionname"><a href="#通过rotkit-functionname" class="headerlink" title="通过rotkit.functionname"></a>通过rotkit.functionname</h4><pre class="EnlighterJSRAW" data-enlighter-language="python">printMat(matrix):    打印 TTT matrix 格式. (4X4)getxyz(Sel):    输出一个列表[x,y,z]，为浮点数vector(Sel1,Sel2):   寻找两个点的向量vectorstr(vector):   将vector的格式转换为str格式（开始为列表格式）transmat(vector,dist=1):   根据输入向量制作TTT转换矩阵。 矢量乘以距离。unitvector(vector):   将vector变为单位矢量radangle(angle):   转换角度变为弧度（radians）rotmat(angle,vectornorm,pointcoord):   围绕一个坐标点进行旋转point.crossprod(Vector1, Vector2):   两个向量进行矢量积crosspoint(Pos1, crossprod):Returns the endpoint for the Position plus the crossproduct vector. Suitable if one would like to rotate around a crossvector.</pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="示例1-对结构进行旋转"><a href="#示例1-对结构进行旋转" class="headerlink" title="示例1-对结构进行旋转"></a>示例1-对结构进行旋转</h3><pre class="EnlighterJSRAW" data-enlighter-language="python">reinitializeimport rotkitfetch 1HP1, async=0show_as cartoon, 1HP1show_as sticks, 1HP1 and resn ATP###################### Make rotation axis #################pseudoatom axisA, vdw=1.0pseudoatom axisB, vdw=1.0rotkit.toline("/1HP1//A/477/C","/1HP1//A/423/CG1","axisA","axisA",20)rotkit.toline("/1HP1//A/423/CG1","/1HP1//A/477/C","axisB","axisB",5)show spheres, axisA or axisB label axisA, "axisA" label axisB, "axisB" dist rotaxis, axisA, axisBcolor green, rotaxisset dash_width, 5set dash_gap, 0hide label, rotaxis## Create rotate states of 1HP1create 1HP1_rot, 1HP1, 1, 1pythonang_incr = 1anglerange = range(2,98,ang_incr)nrstates = len(anglerange)+1states = 1for angle in anglerange:  states += 1  rot_1HP1 = "1HP1_rot_%s"%angle  cmd.create(rot_1HP1,"(1HP1 and resi 363-550) or (1HP1 and resn ATP)")  rotkit.rotateline("axisA","axisB",-(angle-1),rot_1HP1)      cmd.create("1HP1_rot",rot_1HP1,1,states)  cmd.create("1HP1_rot",rot_1HP1,1,2*nrstates-states)  cmd.delete(rot_1HP1)python endhide cartoon, (1HP1 and resi 363-550)hide sticks, (1HP1 and resn ATP)mplay</pre><h3 id="示例2-模拟染料的自由度"><a href="#示例2-模拟染料的自由度" class="headerlink" title="示例2-模拟染料的自由度"></a>示例2-模拟染料的自由度</h3><pre class="EnlighterJSRAW" data-enlighter-language="python">reinitializeimport rotkitfetch 1HP1, async=0show_as cartoon, 1HP1show_as sticks, 1HP1 and resn ATPset auto_zoom, off###################### Make rotation axis #################pseudoatom axisA, vdw=1.0pseudoatom axisB, vdw=1.0rotkit.toline("/1HP1//A/477/C","/1HP1//A/423/CG1","axisA","axisA",20)rotkit.toline("/1HP1//A/423/CG1","/1HP1//A/477/C","axisB","axisB",5)show spheres, axisA or axisB label axisA, "axisA" label axisB, "axisB" dist rotaxis, axisA, axisBcolor green, rotaxisset dash_width, 5set dash_gap, 0hide label, rotaxis####################### Create rotate states of dye atoms ######################## First mutate, the mutate functions take 0.2 seconds, so we put in a refesh command to wait for everything is donerotkit.mutate("1HP1", chain="A", resi=308, target="CYS", mutframe=1)cmd.refresh()rotkit.mutate("1HP1", chain="A", resi=513, target="CYS", mutframe=1)cmd.refresh()##### Create simulated dye movement atomspseudoatom Donor, vdw=0.5pseudoatom Acceptor, vdw=0.5show spheres, Donor or Acceptor rotkit.toline("1HP1 and resi 308 and name CA","1HP1 and resi 308 and name SG","Donor","Donor",15.0)rotkit.toline("1HP1 and resi 513 and name CA","1HP1 and resi 513 and name SG","Acceptor","Acceptor",15.0)pythonDye_ang_incr = 6Donor_angle_range = range(0,359,Dye_ang_incr)Acceptor_angle_range = range(0,359,Dye_ang_incr)nrstates = len(Donor_angle_range)+1Donor_states = 1Acceptor_states = 1for Donor_angle in Donor_angle_range:    Donor_states += 1    Donor_angle_name="Donor_%s"%(Donor_angle)    cmd.create(Donor_angle_name,"Donor")    rotkit.rotateline("1HP1 and resi 308 and name CA","1HP1 and resi 308 and name CB",Donor_angle,Donor_angle_name)    # Save it as states in Donor    cmd.create("Donor",Donor_angle_name,1,Donor_states)    cmd.create("Donor",Donor_angle_name,1,2*nrstates-Donor_states)    cmd.group("All_Donors",Donor_angle_name)for Acceptor_angle in Acceptor_angle_range:    Acceptor_states += 1    Acceptor_angle_name="Acceptor_%s"%(Acceptor_angle)    cmd.create(Acceptor_angle_name,"Acceptor")    rotkit.rotateline("1HP1 and resi 513 and name CA","1HP1 and resi 513 and name CB",Acceptor_angle,Acceptor_angle_name)    # Save it as states in Acceptor    cmd.create("Acceptor",Acceptor_angle_name,1,Acceptor_states)    cmd.create("Acceptor",Acceptor_angle_name,1,2*nrstates-Acceptor_states)    cmd.group("All_Acceptors",Acceptor_angle_name)python enddisable All_Donorsdisable All_Acceptorscmd.create("Donor","All_Donors",1,1)cmd.create("Acceptor","All_Acceptors",1,1)mplay</pre><h3 id="示例3-创建距离分布直方图"><a href="#示例3-创建距离分布直方图" class="headerlink" title="示例3-创建距离分布直方图"></a>示例3-创建距离分布直方图</h3><pre class="EnlighterJSRAW" data-enlighter-language="python">reinitializeimport rotkitfetch 1HP1, async=0show_as cartoon, 1HP1show_as sticks, 1HP1 and resn ATPset auto_zoom, off####################### Create rotate states of dye atoms ######################## First mutate, the mutate functions take 0.2 seconds, so we put in a refesh command to wait for everything is donerotkit.mutate("1HP1", chain="A", resi=308, target="CYS", mutframe=1)cmd.refresh()rotkit.mutate("1HP1", chain="A", resi=513, target="CYS", mutframe=1)cmd.refresh()##### Create simulated dye movement atomspseudoatom Donor, vdw=0.5pseudoatom Acceptor, vdw=0.5show spheres, Donor or Acceptor rotkit.toline("1HP1 and resi 308 and name CA","1HP1 and resi 308 and name SG","Donor","Donor",15.0)rotkit.toline("1HP1 and resi 513 and name CA","1HP1 and resi 513 and name SG","Acceptor","Acceptor",15.0)pythonDye_ang_incr = 6Donor_angle_range = range(0,359,Dye_ang_incr)Acceptor_angle_range = range(0,359,Dye_ang_incr)Donor_names = []Acceptor_names = []for Donor_angle in Donor_angle_range:    Donor_angle_name="Donor_%s"%(Donor_angle)    Donor_names.append([Donor_angle,Donor_angle_name])    cmd.create(Donor_angle_name,"Donor")    rotkit.rotateline("1HP1 and resi 308 and name CA","1HP1 and resi 308 and name CB",Donor_angle,Donor_angle_name)    cmd.group("All_Donors",Donor_angle_name)for Acceptor_angle in Acceptor_angle_range:    Acceptor_angle_name="Acceptor_%s"%(Acceptor_angle)    Acceptor_names.append([Acceptor_angle,Acceptor_angle_name])    cmd.create(Acceptor_angle_name,"Acceptor")    rotkit.rotateline("1HP1 and resi 513 and name CA","1HP1 and resi 513 and name CB",Acceptor_angle,Acceptor_angle_name)    cmd.group("All_Acceptors",Acceptor_angle_name)python enddisable All_Donorsdisable All_Acceptorscmd.create("Donor","All_Donors")cmd.create("Acceptor","All_Acceptors")cmd.refresh()# Make a distribution for the Open caseDon_Acc_distribution = []pythonfor Don in Donor_names:    for Acc in Acceptor_names:        distname = "%s_%s"%(Don[1],Acc[1])        distance = cmd.dist(distname,Don[1],Acc[1])        Don_Acc_distribution.append([Don[0], Acc[1], distance])        cmd.delete(distname)python endNewdir=rotkit.createdirs("results_rotkit")os.chdir(Newdir) rotkit.makehistogram(Don_Acc_distribution,dataname="Don_Acc_Open",datalistindex=2,nrbins=100,binrange=[0,0])# Make a distribution for angle rangecmd.create("Acceptor_rot","All_Acceptors")pythonang_incr = 1anglerange = range(2,98,ang_incr)nrstates = len(anglerange)+1states = 1for angle in anglerange:    states += 1    rot_Acceptor = "Acceptor_rot_%s"%angle    cmd.create(rot_Acceptor,"Acceptor_rot")    rotkit.rotateline("/1HP1//A/423/CG1","/1HP1//A/477/C",-(angle-1),rot_Acceptor)      cmd.create("Acceptor_rot",rot_Acceptor,1,states)    cmd.create("Acceptor_rot",rot_Acceptor,1,2*nrstates-states)    cmd.delete(rot_Acceptor)    for Acc in Acceptor_names:        rotkit.rotateline("/1HP1//A/423/CG1","/1HP1//A/477/C",(angle-1),Acc[1])python endmplay</pre><h3 id="示例5-功能向导文件"><a href="#示例5-功能向导文件" class="headerlink" title="示例5-功能向导文件"></a>示例5-功能向导文件</h3><pre class="EnlighterJSRAW" data-enlighter-language="python">reinitializeimport rotkitfetch 1HP1, async=0pythonif 'PYMOL_GIT_MOD' in os.environ:    example_dir = os.path.join(os.path.split(os.environ['PYMOL_GIT_MOD'])[0],"files_for_examples")    cmd.load(os.path.join(example_dir,"Atto590.pdb"))else:    cmd.load("Atto590.pdb")python end# Make sure everything is loaded before we continuecmd.refresh()### Get the names of the loaded objectsprotname = cmd.get_names()[0]molname = cmd.get_names()[1]### Make the names we are going to useprotselectCB="%s and resi 308 and name CB"%protnameprotnameselectCB="K308CB"protselectCA="%s and resi 308 and name CA"%protnameprotnameselectCA="K308CA"molselect13="%s and id 13"%molnamemolnameselect13="dyeatom13"molselect12="%s and id 12"%molnamemolnameselect12="dyeatom12"### Make some selectionscmd.select("%s"%protnameselectCB,"%s"%protselectCB)cmd.select("%s"%protnameselectCA,"%s"%protselectCA)cmd.select("%s"%molnameselect13,"%s"%molselect13)cmd.label("%s"%molnameselect13,"13")cmd.select("%s"%molnameselect12,"%s"%molselect12)cmd.label("%s"%molnameselect12,"12")### Make nice representationscmd.show_as("cartoon","%s"%protname)cmd.show("sticks","byres %s"%protnameselectCB)##### PART I: Use of functions ######## This view will take you to the first partset_view (\     0.377224118,    0.880101919,   -0.288305759,\     0.661396861,   -0.473919988,   -0.581338286,\    -0.648268998,    0.028612033,   -0.760871351,\     0.000000000,    0.000000000,  -56.408561707,\    19.480533600,   34.572898865,    6.978204727,\    46.615653992,   66.201446533,  -20.000001907 )#### Just unhash each part for itself, as you continue through### To print a objects TTT matrix in a readable formatrotkit.printMat(cmd.get_object_matrix(molname))##### We want to move the dye to a desired location, and rotate it to a view we desire##### First get the vector bewteen the dyeatom and the protein atomdiffvector = rotkit.vector("%s"%molselect13,"%s"%protnameselectCB)##### Then move the dyemove = rotkit.transmat(diffvector)##### print the matrix for funrotkit.printMat(move)##### Move the dyecmd.transform_selection("%s"%molname,move)##### Now we want to displace the dye in the CA-CB bond direction##### First find the vector/direction to displace it in. From A -&gt; Bdiffvector = rotkit.vector("%s"%protnameselectCA,"%s"%protnameselectCB)##### Make the vector so its lenth is equal 1uvector = rotkit.unitvector(diffvector)[0]##### Make the move translation matrix, and we multiply the matrix with 3, so it moves 3 Angstrommove = rotkit.transmat(uvector,3)##### Print the matrixrotkit.printMat(move)##### Displace it in the CA-CB directioncmd.transform_selection("%s"%molname,move)##### Now we want to rotate it a single time. We convert 40 degress to radians##### The input is the angle, the line to rotate around, and a point where the line goes throughCBxyz = rotkit.getxyz("%s"%protnameselectCB)[0]rmat = rotkit.rotmat(rotkit.radangle(40),uvector,CBxyz)rotkit.printMat(rmat)##### Copy paste this line into pymol to see it manuallycmd.transform_selection("%s"%molname,rmat)##### We are not quite satisfied, we want to rotate it around its own bond##### So we rotate in around its own 13 -&gt; 12 bondsdiffvector = rotkit.vector("%s"%molnameselect13,"%s"%molnameselect12)uvector = rotkit.unitvector(diffvector)[0]xyz12 = rotkit.getxyz("%s"%molnameselect12)[0]rmat = rotkit.rotmat(rotkit.radangle(10),uvector,xyz12)##### Copy paste this line into pymol to see it manuallycmd.transform_selection("%s"%molname,rmat)##### Now, lets make a function that collects all these call in one function##### We only want to define two positions that defines the line, the angle and the object to rotaterotkit.rotateline("%s"%molnameselect13,"%s"%molnameselect12,180,"%s"%molname)##### This is made as a pymol command as well. I first print the names that we should write manually in the consolprint("rotateline Pos1=%s, Pos2=%s, degangle=15, molecule=%s"%(molnameselect13, molnameselect12, molname))##### To illustate best, we create som copies of the dyepythonanglerange = range(90,360,90)for angle in anglerange:    ### Make a suitable name for the new molecule    molanglename="%s%s"%(molname,angle)    ### Now make a copy    cmd.create(molanglename,molname)    cmd.label("%s and id 12"%molanglename,"12")    cmd.label("%s and id 13"%molanglename,"13")    ### Rotate the copy    rotkit.rotateline("%s"%protnameselectCB,"%s"%molnameselect13,angle,"%s"%molanglename)python end####### End of PART I ########### PART II: More advanced functions ########## This view will take you to the second partset_view (\     0.723298192,    0.467510879,    0.508201897,\     0.371686131,   -0.883831143,    0.284063697,\     0.581970334,   -0.016570913,   -0.813038886,\     0.000000000,    0.000000000,  -76.609786987,\    11.790571213,   64.992294312,   20.803859711,\   -31.181428909,  184.401092529,  -20.000001907 )##### We can fast mutate a protein. frame 1 is the most probable mutationrotkit.mutate(protname, chain="A", resi=513, target="CYS", mutframe=1)##### The mutate functions take 0.2 seconds, so we put in a refesh command to wait for everything is donecmd.refresh()##### This is made as a pymol command as well. I first print the names that we should write manually in the consolprint("mutate %s, chain=%s, resi=%s, target=CYS, mutframe=1"%(protname, "A", 515))##### We now make some selections for this mutationprotselectCBcys="%s and resi 513 and name CB"%protnameprotnameselectCBcys="P513C_CB"protselectCAcys="%s and resi 513 and name CA"%protnameprotnameselectCAcys="P513C_CA"cmd.select("%s"%protnameselectCBcys,"%s"%protselectCBcys)cmd.select("%s"%protnameselectCAcys,"%s"%protselectCAcys)##### Now, lets make a function that collects all the commands to put on an atom on the same line defined by two points##### The input is the two points that define the line, the atom of a molecule to be put on the line, and the distance to moverotkit.toline(protnameselectCAcys,protnameselectCBcys,molnameselect13,molname,3)rotkit.rotateline(protnameselectCAcys,protnameselectCBcys,180,molname)rotkit.rotateline(molnameselect13,molnameselect12,10,molname)print("toline Pos1=%s, Pos2=%s, atom=%s, molecule=%s, dist=%s"%(protnameselectCAcys,protnameselectCBcys,molnameselect13,molname,3))print("rotateline Pos1=%s, Pos2=%s, degangle=180, molecule=%s"%(protnameselectCAcys, protnameselectCBcys, molname))print("rotateline Pos1=%s, Pos2=%s, degangle=10, molecule=%s"%(molnameselect13, molnameselect12, molname))cmd.refresh()####### End of PART II ########### Now we make a cross product ####molselect14="%s and id 14"%molnamemolnameselect14="dyeatom14"cmd.select("%s"%molnameselect14,"%s"%molselect14)cmd.label("%s"%molnameselect14,"14")cross = rotkit.crossprod(rotkit.vector(molselect13,molselect12),rotkit.vector(molselect13,molselect14))unity_cross = rotkit.unitvector(cross)[0]point_cross = rotkit.crosspoint(molselect13,cross)rotkit.rotateline(molnameselect13,point_cross,180,molname)print("rotateline Pos1=%s, Pos2=%s, degangle=10, molecule=%s"%(molnameselect13, point_cross, molname))</pre><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Rotkit是一个pymol小脚本工具包，依稀记得还是大四的时候有人在bioms群里出售一个脚本，可以将配体周围的氨基酸残基进行突变，然后进行突变对接或者分析，来简单的查看突变对配体与蛋白之间的相互影响。当时觉得非常的高达上，今天查看Pymol的时候发现这个小脚本就可以非常
      
    
    </summary>
    
      <category term="绘图与可视化" scheme="http://kangsgo.com/categories/%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>Pymol 选择速查手册</title>
    <link href="http://kangsgo.com/706.html"/>
    <id>http://kangsgo.com/706.html</id>
    <published>2017-09-05T05:27:24.000Z</published>
    <updated>2017-10-18T14:39:47.606Z</updated>
    
    <content type="html"><![CDATA[<p><div class="markdown-here-wrapper" data-md-url="http://kangsgo.com/wp-admin/post.php?post=706&amp;action=edit"></div></p><blockquote><p>此内容主要是为了对Pymol进行选择的小结总结，完全的内容可以查看<a href="https://pymolwiki.org/index.php/TOPTOC" target="_blank" rel="external">PymolWiki</a>。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-f38366920a6af25a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pymol.png" title="">                </div>                <div class="image-caption">pymol.png</div>            </figure><blockquote><p>此内容主要是为了对Pymol进行选择的小结总结，完全的内容可以查看<a href="https://pymolwiki.org/index.php/TOPTOC" target="_blank" rel="external">PymolWiki</a>。</p></blockquote><h2 id="原子选择的命名"><a href="#原子选择的命名" class="headerlink" title="原子选择的命名"></a>原子选择的命名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#表达式</span></div><div class="line">select selection-name,selection-expression</div><div class="line"></div><div class="line"><span class="comment">#例子</span></div><div class="line">select bb,name c+o+n+ca    <span class="comment">#创建名称“bb”的原子，包括“C”，“O”，“N”或者“CA”的原子</span></div><div class="line">color red, bb   <span class="comment">#给bb赋予红色</span></div><div class="line">hide lines, bb  <span class="comment">#隐藏线状representation</span></div><div class="line">show sticks, bb  <span class="comment">#棒状展示</span></div><div class="line">zoom bb   <span class="comment">#聚焦bb</span></div></pre></td></tr></table></figure><h2 id="单字母选择"><a href="#单字母选择" class="headerlink" title="单字母选择"></a>单字母选择</h2><table><thead><tr><th>–单字母–</th><th>–短选择–</th><th>–描述–</th></tr></thead><tbody><tr><td>all</td><td>*</td><td>PyMOL中加载全原子</td></tr><tr><td>none</td><td>none</td><td>啥也不选</td></tr><tr><td>hydro</td><td>h.</td><td>所有氢原子，足以后面有.</td></tr><tr><td>hetatm</td><td>het</td><td>加载HETATM标签</td></tr><tr><td>visible</td><td>v.</td><td>选择所有可见的原子</td></tr><tr><td>polymer</td><td>pol.</td><td>聚合物</td></tr><tr><td>backbone</td><td>bb.</td><td>骨架原子</td></tr><tr><td>sidechain</td><td>sc.</td><td>侧链原子</td></tr><tr><td>center</td><td></td><td>居中</td></tr><tr><td>origin</td><td></td><td>旋转</td></tr><tr><td>orgainic</td><td>org.</td><td>所有非聚合的有机化合物（如:配体，buffers等等）</td></tr><tr><td>inorganic</td><td></td><td>非有机分析</td></tr><tr><td>metals</td><td></td><td>金属离子（PyMOL1.6.1以上）</td></tr><tr><td>solvent</td><td></td><td>溶剂分析，包括HOH，WAT，H2O，TIP，SOL</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#示例</span></div><div class="line"></div><div class="line">color blue, all   <span class="comment">#所有颜色标记为blue</span></div><div class="line">color blue, *</div><div class="line"></div><div class="line">hide hydro    <span class="comment">#所有氢原子都隐藏</span></div><div class="line">hide h.</div><div class="line"></div><div class="line">show spheres, hetatom   <span class="comment">#所有定义为HETATOMS的原子</span></div><div class="line">show spheres, het</div></pre></td></tr></table></figure><h2 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h2><table><thead><tr><th>–匹配参数选择–</th><th>–短字符–</th><th>–例子和解释–</th></tr></thead><tbody><tr><td>symbol</td><td>e.</td><td>一到两个化学特征字符<code>select polar,symbol O+N</code></td></tr><tr><td>name</td><td>n.</td><td>最高4个字符的蛋白或者核酸原子<code>select carbons,name CA+CB+CG+CD</code></td></tr><tr><td>resn</td><td>r.</td><td>残基名<code>select aas, resn ASP+GLU+ASN</code>  核酸名<code>select bases,resn A+G</code></td></tr><tr><td>resi</td><td>i.</td><td>残基编号<code>select mults10,resi 1+10+100``select nterm,resi 1-10</code></td></tr><tr><td>alt</td><td>alt</td><td>alternate-conformation-identifier-list <code>select altconf,alt A+&quot;&quot;</code></td></tr><tr><td>chain</td><td>c.</td><td>选择相应的链<code>select firstch,chain A</code></td></tr><tr><td>segi</td><td>s.</td><td>选择片段特征<code>select ligand,segi lig</code></td></tr><tr><td>flag</td><td>f.</td><td>从0到31的单整数<code>select f1,flag 0</code></td></tr><tr><td>numeric_type</td><td>nt.</td><td>单个整数<code>select typel, nt. 5</code></td></tr><tr><td>text_type</td><td>tt.</td><td>type-string<code>select subset,text_type HA+HC</code></td></tr><tr><td>id</td><td>id</td><td>单整数外部索引<code>select idno,id 23</code></td></tr><tr><td>index</td><td>idx.</td><td>单整数内部索引<code>select intid,index 11</code></td></tr><tr><td>ss</td><td>ss</td><td>二级结构<code>select allstrs,ss H+S+L+&quot;&quot;</code></td></tr></tbody></table><h2 id="数字选择表"><a href="#数字选择表" class="headerlink" title="数字选择表"></a>数字选择表</h2><table><thead><tr><th>–数字选择–</th><th>–短字符–</th><th>–参数和例子–</th></tr></thead><tbody><tr><td>b</td><td>b</td><td>beta因子<code>select fuzzy,b&gt;10</code></td></tr><tr><td>q</td><td>q</td><td>占有率值<code>select lowcharges,q&gt;0.50</code></td></tr><tr><td>formal_charge</td><td>fc.</td><td>形成电荷值<code>select doubles,fc.=-1</code></td></tr><tr><td>partial_charge</td><td>pc.</td><td>部分电荷值<code>select hicharges,pc.&gt;1</code></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 例子</span></div><div class="line">select nterm,resi <span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span></div><div class="line">select nterm,resi <span class="number">1</span><span class="number">-3</span></div><div class="line">select unstruct,ss <span class="string">" "</span></div></pre></td></tr></table></figure><h2 id="选择操作和修饰表格"><a href="#选择操作和修饰表格" class="headerlink" title="选择操作和修饰表格"></a>选择操作和修饰表格</h2><table><thead><tr><th>–操作–</th><th>–短字符–</th><th>–影响–</th></tr></thead><tbody><tr><td>not s1</td><td>!s1</td><td>不包括<code>select sidechains,!bb</code></td></tr><tr><td>s1 and s2</td><td>s1&amp;s2</td><td>选择既在s1又在s2中的原子<code>select far_bb,bb&amp;farfrm_ten</code></td></tr><tr><td>s1 or s2</td><td>s1\</td><td>s2</td><td>选择s1或者s2中的原子（也就是包含全部的s1和 s2原子）`select all_prot,bb\</td><td>sidechain`</td></tr><tr><td>s1 in s2</td><td></td><td>选择s1中的那些原子，其identifiers (name, resi,  resn, chain, segi) 全部符合s2中对应的原子<code>select same_atms,pept in prot</code></td></tr><tr><td>s1 like s2</td><td>s1 \</td><td>.s2</td><td>选择s1中的那些原子，其identifiers (name, resi) 符合s2中对应的原子<code>select similar_atms,pept like prot</code></td></tr><tr><td>s1 gap X</td><td></td><td>选择那些原子，其van der Waals半径至少和s1的 van der Waals半径相差X<code>select farfrm_ten,resi 10 gap 5</code></td></tr><tr><td>s1 around X</td><td>s1 a.X</td><td>选择以s1中任何原子为中心，X为半径，所包括的所 有原子 <code>select near_ten,resi 10 around 5</code></td></tr><tr><td>s1 expand</td><td>s1 x.X</td><td>选择以s1中任何原子为中心，X为半径，然后把s1 扩展至该新的范围所包含的所有原子 <code>select near_ten_x,near_ten expand 3</code></td></tr><tr><td>s1 within X of s2</td><td>s1 w.X of s2</td><td>选择以s2为中心，X为半径，并包含在s1中的原子 <code>select bbnearten,bb w. 4 of resi 10</code></td></tr><tr><td>byres s1</td><td>br. s1</td><td>扩展完整的分子<code>select complete_mol, bm. bbnear10</code></td></tr><tr><td>bymolecule s1</td><td>bm.s1</td><td>故名思义，下同</td></tr><tr><td>byfragment s1</td><td>bf. s1</td><td><code>select complete_frag, bf. bbnear10</code></td></tr><tr><td>bysegment s1</td><td>bs. s1</td><td><code>select complete_seg, bs. bbnear10</code></td></tr><tr><td>byobject s1</td><td>bo. s1</td><td>把选择扩展到全部object <code>select near_obj, bo. near_res</code></td></tr><tr><td>bycell s1</td><td></td><td></td></tr><tr><td>byring s1</td><td></td><td>1.8.2新功能<code>select rings,byring (all)</code></td></tr><tr><td>neighbor s1</td><td>nbr. s1</td><td>选择直接和s1相连的原子.<code>select vicinos,neighbor resi 10</code></td></tr><tr><td>bound_to s1</td><td>bto. s1</td><td></td></tr><tr><td>s1 extend X</td><td>s1 xt. X</td><td><code>selecr connect_x,near10 extend 3</code></td></tr><tr><td>pepseq SEQ</td><td>ps. SEQ</td><td><code>select 1tvn and ps. FATEW</code></td></tr><tr><td>rep <em>rep</em></td><td></td><td><code>select sele,rep spheres</code></td></tr></tbody></table><h2 id="大量快速选择"><a href="#大量快速选择" class="headerlink" title="大量快速选择"></a>大量快速选择</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select pept <span class="keyword">and</span> segi lig <span class="keyword">and</span> chain b <span class="keyword">and</span> resi <span class="number">142</span> <span class="keyword">and</span> name ca</div></pre></td></tr></table></figure><p>可以压缩成如下格式:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select /pept/lig/b/<span class="number">142</span>/ca</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;div class=&quot;markdown-here-wrapper&quot; data-md-url=&quot;http://kangsgo.com/wp-admin/post.php?post=706&amp;amp;action=edit&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="绘图与可视化" scheme="http://kangsgo.com/categories/%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Pymol" scheme="http://kangsgo.com/tags/Pymol/"/>
    
  </entry>
  
  <entry>
    <title>VMD粗粒化显示插件Bendix简单介绍</title>
    <link href="http://kangsgo.com/700.html"/>
    <id>http://kangsgo.com/700.html</id>
    <published>2017-08-24T01:19:52.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<div class="markdown-here-wrapper" data-md-url="http://kangsgo.com/wp-admin/post-new.php"><br><br>VMD是一个分子可视化程序, 它采用三维图形技术以及内置脚本来对生物大分子体系进行展示, 动画制作和分析. VMD官方网站 <a href="http://www.ks.uiuc.edu/Research/vmd/" target="_blank" rel="external">http://www.ks.uiuc.edu/Research/vmd/</a>.其展示的蛋白非常漂亮，而且是免费软件，是与Pymol，UCSF Chimera齐名的可视化软件。但是粗粒化的显示效果不佳，好在可以在VMD 1.9.2以后自带的Bendix插件的帮助下显示非常美丽的粗粒化模型。<br><br>先一饱眼福粗粒化模拟做出来的图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-0d3dbb3be65140e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片1： DPPC bilayer formation" title="">                </div>                <div class="image-caption">图片1： DPPC bilayer formation</div>            </figure><br><br>### 官方教程<br><br>这里对官方显示教程做一个简单的介绍：<br>首先下载官方示例包：<a href="http://sbcb.bioch.ox.ac.uk/Bendix/data/tutorial_files.zip" target="_blank" rel="external">http://sbcb.bioch.ox.ac.uk/Bendix/data/tutorial_files.zip</a><br>其中包含pdb文件（PDB ID：1PV7）和一个分析文件（pdb）以及一个分析轨迹文件（dcd）<br><br>### 1.VMD中一般螺旋表示<br><br>首先我们可以把背景设置为白色<strong>VMD Main &gt; Graphics &gt; Colours</strong>，选择<strong>Display</strong>，设置<strong>Background</strong>颜色为8 white<br>加载 1PV7_LacY.pdb。通过<strong>Graphics &gt;Representations</strong>设置为下图所示：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-e31cf4b2dc5ca76a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><br>### 2.Bendix中螺旋的功能图形的显示<br><br>从<strong>VMD Main&gt;Extensions&gt;Visualization&gt;Bendix</strong>中打开工具，保持默认设置，点击<strong>Draw</strong>按钮，结果如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-0ca1fa61779d0ba8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><br>### 3.设置成单一颜色<br><br>这个非常的简单，在Uniform color中设置 <strong>full selection</strong>即可，如果是多个蛋白，设置<strong>by chain</strong>即可显示不同颜色<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-a8d57f0aa49a67cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><br>### 4.热图<br><br>显示热图仅需设置为Heatmap color即可，<strong>Scale</strong>选项默认为RGB，即Red-Green-Blue，<strong>Color threshold</strong>为颜色阈值。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-4b1472df77b14462.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><br>### 5. 绘制non-Bendices<br><br>仅需<strong>Rep 0</strong>修改为<strong>Tube</strong>即可<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-42ad4ed2bdd5ad3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><br>完整的教程包括轨迹教程可以查阅官方文档：<a href="http://sbcb.bioch.ox.ac.uk/Bendix/tutorial.html" target="_blank" rel="external">http://sbcb.bioch.ox.ac.uk/Bendix/tutorial.html</a><br><br><div style="height: 0; width: 0; max-height: 0; max-width: 0; overflow: hidden; font-size: 0em; padding: 0; margin: 0;" title="MDH:PHA+Jmd0O1ZNROaYr+S4gOS4quWIhuWtkOWPr+inhuWMlueoi+W6jywg5a6D6YeH55So5LiJ57u0 5Zu+5b2i5oqA5pyv5Lul5Y+K5YaF572u6ISa5pys5p2l5a+555Sf54mp5aSn5YiG5a2Q5L2T57O7 6L+b6KGM5bGV56S6LCDliqjnlLvliLbkvZzlkozliIbmnpAuIFZNROWumOaWuee9keermSBodHRw Oi8vd3d3LmtzLnVpdWMuZWR1L1Jlc2VhcmNoL3ZtZC8u5YW25bGV56S655qE6JuL55m96Z2e5bi4 5ryC5Lqu77yM6ICM5LiU5piv5YWN6LS56L2v5Lu277yM5piv5LiOUHltb2zvvIxVQ1NGIENoaW1l cmHpvZDlkI3nmoTlj6/op4bljJbova/ku7bjgILkvYbmmK/nspfnspLljJbnmoTmmL7npLrmlYjm npzkuI3kvbPvvIzlpb3lnKjlj6/ku6XlnKhWTUQgMS45LjLku6XlkI7oh6rluKbnmoRCZW5kaXjm j5Lku7bnmoTluK7liqnkuIvmmL7npLrpnZ7luLjnvo7kuL3nmoTnspfnspLljJbmqKHlnovjgII8 L3A+PHA+5YWI5LiA6aWx55y856aP57KX57KS5YyW5qih5ouf5YGa5Ye65p2l55qE5Zu+77yaPC9w PjxwPiFb5Zu+54mHMe+8miBEUFBDIGJpbGF5ZXIgZm9ybWF0aW9uXShodHRwOi8vdXBsb2FkLWlt YWdlcy5qaWFuc2h1LmlvL3VwbG9hZF9pbWFnZXMvOTAzNDY3LTBkM2RiYjNiZTY1MTQwZTgucG5n P2ltYWdlTW9ncjIvYXV0by1vcmllbnQvc3RyaXAlN0NpbWFnZVZpZXcyLzIvdy8xMjQwKTwvcD48 cD4jIyMg5a6Y5pa55pWZ56iLPGJyPui/memHjOWvueWumOaWueaYvuekuuaVmeeoi+WBmuS4gOS4 queugOWNleeahOS7i+e7je+8mjxicj7pppblhYjkuIvovb3lrpjmlrnnpLrkvovljIXvvJpodHRw Oi8vc2JjYi5iaW9jaC5veC5hYy51ay9CZW5kaXgvZGF0YS90dXRvcmlhbF9maWxlcy56aXA8YnI+ 5YW25Lit5YyF5ZCrcGRi5paH5Lu277yIUERCIElE77yaMVBWN++8ieWSjOS4gOS4quWIhuaekOaW h+S7tu+8iHBkYu+8ieS7peWPiuS4gOS4quWIhuaekOi9qOi/ueaWh+S7tu+8iGRjZO+8iTwvcD48 cD4jIyMgMS5WTUTkuK3kuIDoiKzonrrml4vooajnpLo8YnI+6aaW5YWI5oiR5Lus5Y+v5Lul5oqK 6IOM5pmv6K6+572u5Li655m96ImyKipWTUQgTWFpbiAmZ3Q7IEdyYXBoaWNzICZndDsgQ29sb3Vy cyoq77yM6YCJ5oupKipEaXNwbGF5KirvvIzorr7nva4qKkJhY2tncm91bmQqKuminOiJsuS4ujgg d2hpdGU8L3A+PHA+5Yqg6L29IDFQVjdfTGFjWS5wZGLjgILpgJrov4cqKkdyYXBoaWNzICZndDtS ZXByZXNlbnRhdGlvbnMqKuiuvue9ruS4uuS4i+WbvuaJgOekuu+8mjwvcD48cD4hW10oaHR0cDov L3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzkwMzQ2Ny1lMzFjZjRiMmRj NWNhNzZhLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cv MTI0MCk8L3A+PHA+IyMjIDIuQmVuZGl45Lit6J665peL55qE5Yqf6IO95Zu+5b2i55qE5pi+56S6 PGJyPuS7jioqVk1EIE1haW4mZ3Q7RXh0ZW5zaW9ucyZndDtWaXN1YWxpemF0aW9uJmd0O0JlbmRp eCoq5Lit5omT5byA5bel5YW377yM5L+d5oyB6buY6K6k6K6+572u77yM54K55Ye7KipEcmF3Kirm jInpkq7vvIznu5PmnpzlpoLkuIvvvJo8L3A+PHA+IVtdKGh0dHA6Ly91cGxvYWQtaW1hZ2VzLmpp YW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85MDM0NjctMGNhMWZhNjE3NzlkMGJhOC5wbmc/aW1hZ2VN b2dyMi9hdXRvLW9yaWVudC9zdHJpcCU3Q2ltYWdlVmlldzIvMi93LzEyNDApPC9wPjxwPiMjIyAz Luiuvue9ruaIkOWNleS4gOminOiJsjxicj7ov5nkuKrpnZ7luLjnmoTnroDljZXvvIzlnKhVbmlm b3JtIGNvbG9y5Lit6K6+572uICoqZnVsbCBzZWxlY3Rpb24qKuWNs+WPr++8jOWmguaenOaYr+Wk muS4quibi+eZve+8jOiuvue9rioqYnkgY2hhaW4qKuWNs+WPr+aYvuekuuS4jeWQjOminOiJsjwv cD48cD4hW10oaHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzkw MzQ2Ny1hOGQ1N2YwYWE0OWE2N2NiLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdD aW1hZ2VWaWV3Mi8yL3cvMTI0MCk8L3A+PHA+IyMjIDQu54Ot5Zu+PGJyPuaYvuekuueDreWbvuS7 hemcgOiuvue9ruS4ukhlYXRtYXAgY29sb3LljbPlj6/vvIwqKlNjYWxlKirpgInpobnpu5jorqTk uLpSR0LvvIzljbNSZWQtR3JlZW4tQmx1Ze+8jCoqQ29sb3IgdGhyZXNob2xkKirkuLrpopzoibLp mIjlgLzjgII8L3A+PHA+IVtdKGh0dHA6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2Fk X2ltYWdlcy85MDM0NjctNGIxNDcyZGY3N2IxNDQ2Mi5wbmc/aW1hZ2VNb2dyMi9hdXRvLW9yaWVu dC9zdHJpcCU3Q2ltYWdlVmlldzIvMi93LzEyNDApPC9wPjxwPiMjIzUuIOe7mOWItm5vbi1CZW5k aWNlczwvcD48cD7ku4XpnIAqKlJlcCAwKirkv67mlLnkuLoqKlR1YmUqKuWNs+WPrzwvcD48cD4h W10oaHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzkwMzQ2Ny00 MmFkNGVkMmJkZDVhZDNkLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VW aWV3Mi8yL3cvMTI0MCk8L3A+PHA+PGJyIGRhdGEtbWNlLWJvZ3VzPSIxIj48L3A+PHA+5a6M5pW0 55qE5pWZ56iL5YyF5ous6L2o6L+55pWZ56iL5Y+v5Lul5p+l6ZiF5a6Y5pa55paH5qGj77yaaHR0 cDovL3NiY2IuYmlvY2gub3guYWMudWsvQmVuZGl4L3R1dG9yaWFsLmh0bWw8L3A+PHA+PGJyIGRh dGEtbWNlLWJvZ3VzPSIxIj48L3A+PHA+5pu05aSa5Y6f5Yib57K+5b2p6KeG6aKR5pWs6K+35YWz 5rOoKirnlJ/kv6HmnYLosIg6Kio8L3A+PHA+IVtdKGh0dHA6Ly91cGxvYWQtaW1hZ2VzLmppYW5z aHUuaW8vdXBsb2FkX2ltYWdlcy85MDM0NjctMjE3ZWU2OGNhYWE2NTRjMy5wbmc/aW1hZ2VNb2dy Mi9hdXRvLW9yaWVudC9zdHJpcCU3Q2ltYWdlVmlldzIvMi93LzEyNDApPC9wPg==">​</div><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;markdown-here-wrapper&quot; data-md-url=&quot;http://kangsgo.com/wp-admin/post-new.php&quot;&gt;&lt;br&gt;&lt;br&gt;VMD是一个分子可视化程序, 它采用三维图形技术以及内置脚本来对生物大分子体系进行展
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
      <category term="绘图与可视化" scheme="http://kangsgo.com/categories/Gromacs/%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>Gromacs 5.1.2做拉伸动力学的几点笔记</title>
    <link href="http://kangsgo.com/694.html"/>
    <id>http://kangsgo.com/694.html</id>
    <published>2017-08-19T07:14:18.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<p>因为后期实验需要用到，最近几天在学习拉伸动力学模拟，虽然拉伸动力学教程为5.X版本，但是自5.1版本对于pull模块还是有较大的变化，这里和大家分享一下其中遇到的问题和我自己的解决方法。</p><p><strong>英文版已经升级到5.1最新了，可能用5.1版本不会遇到这些问题</strong></p><p>首先第一条就遇到了一点小问题</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">gmx pdb2gmx -f input.pdb -ignh -ter -o complex.gro</pre><p>其提示选择什么水模型，我选择的SPC模型，个人觉得加<code>-water tip3p</code>更佳？因为不知道最后采用的什么水模型。也没要TIP3P，TIP4P之类的选项让人没有底。</p><p>在进行构型生成的时候，会有一系列的错误，我们首先来看教程中的</p><pre class="EnlighterJSRAW" data-enlighter-language="null">; Pull codepull = yespull_ngroups = 2pull_ncoords = 1pull_group1_name = Chain_Apull_group2_name = Chain_Bpull_coord1_type = umbrella ; harmonic biasing forcepull_coord1_geometry = distance ; simple distance increasepull_coord1_groups = 1 2pull_coord1_dim = N N Ypull_coord1_rate = 0.01 ; 0.01 nm per ps = 10 nm per nspull_coord1_k = 1000 ; kJ mol^-1 nm^-2pull_start = yes ; define initial COM distance &gt; 0</pre><p>第一个为pull_start提示的warning，现在该参数在新版中已经没有，需要改成<code>pull_coord1_start</code> （英文版本已经改过来了）<br>参考的为：<a href="https://mailman-1.sys.kth.se/pipermail/gromacs.org_gmx-users/2016-March/104109.html" target="_blank" rel="external">https://mailman-1.sys.kth.se/pipermail/gromacs.org_gmx-users/2016-March/104109.html</a></p><p><code>NOTE 1</code>提示的没有设置特定的<code>cutoff-scheme</code>的值，<code>cutoff-scheme</code>gromacs中只有group方案和Verlet方案，group方案较老，可能新的版本已经不存在了，同时速度也较差，具体可以查看。<a href="http://www.gromacs.org/Documentation/Cut-off_schemes" target="_blank" rel="external">http://www.gromacs.org/Documentation/Cut-off_schemes</a></p><p><code>nstlist</code>可以设置超过10，因为在Verlet算法中nstlist不影响精确度</p><p><code>leapfrog does not yet support Nose-Hoover chains, nhchainlength reset to 1</code>这个问题有人说无关紧要，有人说可以<br><a href="http://gromacs.org_gmx-users.maillist.sys.kth.narkive.com/cXo18Y84/dr-lemkul-s-umbrella-sampling-tutorial-grompp-note-on-leap-frog-nose-hoover" target="_blank" rel="external">http://gromacs.org_gmx-users.maillist.sys.kth.narkive.com/cXo18Y84/dr-lemkul-s-umbrella-sampling-tutorial-grompp-note-on-leap-frog-nose-hoover</a></p><p><code>nstcomm &amp;amp;lt; nstcalcenergy defeats the purpose of nstcalcenergy, setting nstcomm to nstcalcenergy</code>中nstomm选项是用来去除质心的整体运动的，如果不使用的话，体系整体会有平动速度，沿某一方向平移，去除后就没有这种现象了，轨迹看起来也正常一些。一个办法是不去管他（我的方法），另外一个可以nstcalcenergy设置为10</p><p><code>distances.pl</code>脚本李老师翻译的版本中<code>gmx distance</code>中<code>-oaxy</code>命令已经过时，可以使用英文网站上的perl脚本，但是我使用还是会有阅读不全的问题，好像是阻塞的缘故，但是自己不会用perl就重新用python写了一个，如下：</p><pre class="EnlighterJSRAW" data-enlighter-language="python">#-*-coding:utf-8-*-#-*-coding:utf-8-*-# usage:python distances.py [filenum=501]# example:python distances.pyimport os,re,systry:num=int(sys.argv[1])except:num=501for i in range(num):cmd="gmx distance -s pull.tpr -f conf%s.gro -n index.ndx -oall dist%s.xvg -select \'com of group \"Chain_A\" plus com of group \"Chain_B\"\' " %(str(i),str(i))os.system(cmd)output=open('summary_distances.dat','a')for i in range(num):file='dist'+str(i)+'.xvg'if os.path.exists(file):input=open(file,'r')for line in input:if re.match(r'^[#@]',line):passelse:num,distance=line.split()#print(distance)output.write(str(i)+"\t")output.write(distance)output.write('\n')input.close()output.close()````setupUmbrella.py`python版本为2.x，像我这种用3版本的就尴尬了，又不想重新写，就用conda环境包弄一下。```bashconda create --name python2 python=2.7source activate python</pre><p>&nbsp;</p><p><code>run-umbrella.sh</code>中需要前面需要加<code>gmx</code>，如下:</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">#!/bin/bash# Short equilibrationgmx grompp -f npt_umbrella.mdp -c confXXX.gro -p topol.top -n index.ndx -o nptXXX.tprgmx mdrun -deffnm nptXXX# Umbrella rungmx grompp -f md_umbrella.mdp -c nptXXX.gro -t nptXXX.cpt -p topol.top -n index.ndx -o umbrellaXXX.tprgmx mdrun -deffnm umbrellaXXX -pf pullf-umbrellaXXX.xvg -px pullx-umbrellaXXX.xvg</pre><p>后面也是<code>pull_coord1_start</code>的问题，修改一下即可</p><p>&nbsp;</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为后期实验需要用到，最近几天在学习拉伸动力学模拟，虽然拉伸动力学教程为5.X版本，但是自5.1版本对于pull模块还是有较大的变化，这里和大家分享一下其中遇到的问题和我自己的解决方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;英文版已经升级到5.1最新了，可能用5.1版本不会遇到这
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
    
  </entry>
  
  <entry>
    <title>GromacsWrapper:Gromacs的Python框架包</title>
    <link href="http://kangsgo.com/690.html"/>
    <id>http://kangsgo.com/690.html</id>
    <published>2017-08-10T08:15:21.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>GromacsWrapper</strong>是一个调用Gromacs工具的封装Python包，其能够完美的通过python脚本来运行gromacs工具。<strong>其相比shell脚本在错误处理和结构检测中更具优势，同时其模块化以及代码的循环利用也是该软件包的一大特色</strong>。<br>其支持的<code>gromacs版本</code>有（v4.6.x, v5.x, and 2016.x）<br>笔者写这篇文章时版本为<code>0.6.2</code>，版本更新请查看最新文档</p></blockquote><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><h4 id="1-快速安装"><a href="#1-快速安装" class="headerlink" title="1.快速安装"></a>1.快速安装</h4><p>建议使用这个方法，简单方便:</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">pip install GromacsWrapper</pre><h4 id="2-手动安装"><a href="#2-手动安装" class="headerlink" title="2.手动安装"></a>2.手动安装</h4><p>如果你更加喜欢下载安装，可以进入<a href="https://github.com/Becksteinlab/GromacsWrapper/releases" target="_blank" rel="external">https://github.com/Becksteinlab/GromacsWrapper/releases</a>下载安装，笔者写此篇文章时版本为0.6.2</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">pip install GromacsWrapper-0.6.2.tar.gz</pre><p>或者下载下来本地安装:</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">tar -zxvf GromacsWrapper-0.6.2.tar.gzcd GromacsWrapper-0.6.2python setup.py install</pre><h4 id="3-要求"><a href="#3-要求" class="headerlink" title="3.要求"></a>3.要求</h4><p>GromacsWrapper包需要使用python2.7版本，同时需要<code>numpy</code>,<code>matplotlib</code>以及<code>scipy</code>和<code>RecSQL</code>的支持，同时官网强烈推荐<code>ipython</code>的安装，所以强烈建议下载一个<code>Anconda</code><br>若还没有使用过anconda建议看一下先前的<a href="http://www.jianshu.com/p/05ca0edb90c1" target="_blank" rel="external">一篇文章</a><br>我们仅需要创建一个新的python环境，然后pip RecSQL，conda安装以上包即可。</p><p>简单代码可以参考如下,也可以当作是一个温故知新吧：</p><pre class="EnlighterJSRAW" data-enlighter-language="shell">#配置环境与安装conda create --name gromacsw python=2.7 matplotlib scipy numpy jupyter#激活环境source activate gromacsw#安装剩余依赖与软件pip install recsqlpip install GromacsWrapper</pre><h3 id="二、设置"><a href="#二、设置" class="headerlink" title="二、设置"></a>二、设置</h3><p><code>GromacsWrapper</code>安装好以后我们需要对其进行设置，从而能够使得其来阅读与操作。<br>其<code>gromacswarapper.cfg</code>在模块根目录可以查看到，例如我安装的位于<code>miniconda3/envs/gromacsw/lib/python2.7/site-packages/gromacs/templates</code>目录下。在首次导入时，将会提示你进行设置，设置的方法也非常的简单。</p><pre class="EnlighterJSRAW" data-enlighter-language="python">import gromacsgromacs.config.setup()</pre><p>其将会在<code>~/.gromacswrapper.cfg</code>创建一个设置文件，同时会创建一个<code>~/.gromacswapper</code>的目录文件，那么你可以对其进行编辑了，以下为具体的设置内容与解释：</p><pre class="EnlighterJSRAW" data-enlighter-language="null">[DEFAULT]# 存储用户模板与rc文件.configdir = ~/.gromacswrapper# 存储用户系统脚本.qscriptdir = %(configdir)s/qscripts# 存储用户模板例如mdp文件.templatesdir = %(configdir)s/templates# 存储用户管理设置文件managerdir = %(configdir)s/managers[Gromacs]# gromacs安装的版本.# gromacs路径## GMXRC = /usr/local/gromacs/bin/GMXRC#如果为空默认先搜索gromacs5，然后是gromacs4##release = 5.1.2# Gromacs工具所有的工具名#编辑此列表仅在重新加载软件包时才起作用。.# - for Gromacs 4: Generated with 'ls [^Gac]*' from the Gromacs bin dir## tools = ...# - 对于Gromacs5版本，仅需设置如下即可## tools = gmx gmx_d# 哪些工具可用作为 gromacs.NAME# 一般不需要修改## groups = tools[Logging]# 在当前目录下写下什么日志文件logfilename = gromacs.log# 日志文件等级 (see Python's logging module for details)## ERROR    only fatal errors# WARN     only warnings# INFO     interesting messages# DEBUG    everything# # 写在屏幕上什么内容loglevel_console = INFO# file     什么消息写在日志文件中loglevel_file = DEBUG</pre><p>其中版本可以通过<code>gmx -version</code>（5X版本）查看，GMXRC路径可以搜索一下，若是apt-get安装我的是<code>/usr/share/gromacs/shell-specific/GMXRC</code>仅供参考。</p><p>最后我们可以检测一下是否设置好</p><pre class="EnlighterJSRAW" data-enlighter-language="python">gromacs.config.check_setup()</pre><p>不出意外的话返回的为<code>True</code></p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;GromacsWrapper&lt;/strong&gt;是一个调用Gromacs工具的封装Python包，其能够完美的通过python脚本来运行gromacs工具。&lt;strong&gt;其相比shell脚本在错误处理和结构检测中更具优势，同时其模块
      
    
    </summary>
    
      <category term="Gromacs" scheme="http://kangsgo.com/categories/Gromacs/"/>
    
    
  </entry>
  
  <entry>
    <title>PLIP:蛋白配体联系分析工具</title>
    <link href="http://kangsgo.com/684.html"/>
    <id>http://kangsgo.com/684.html</id>
    <published>2017-08-10T08:08:23.000Z</published>
    <updated>2017-10-18T12:17:14.231Z</updated>
    
    <content type="html"><![CDATA[<div class="markdown-here-wrapper" data-md-url="http://kangsgo.com/wp-admin/post-new.php"><br>&gt; <code>PILP</code>（Protein-Ligand Interaction Profiler）是一个在线的蛋白配体非共价联系的分析工具，其简单易用，同时提供Github版本利于学习其设计模式。PILP可以直接使用四字符的PDB code或者使用自己的pdb结构文件。之后分析复合物，结果将会展示所有可测定的在原子水平的非共价联系（氢键，水桥，盐桥，卤键，疏水联系，π-堆积，π-离子联系，金属复合物）。同时结果可以下载文本结果，机器可读的XML格式以及PyMOL可视化文件（pse），同时网站上也有JSmol应用的3D联系图像。<br><br>其网址为:<a href="http://plip.biotec.tu-dresden.de/plip-web/plip/index" target="_blank" rel="external">http://plip.biotec.tu-dresden.de/plip-web/plip/index</a><br><br>Github地址为:<a href="https://github.com/ssalentin/plip" target="_blank" rel="external">https://github.com/ssalentin/plip</a><br><br>首先上传PDB或者直接输入PDB code，例如<code>1XDN</code>：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-c889a71e9b386cd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="主界面" title="">                </div>                <div class="image-caption">主界面</div>            </figure><br><br>结果如图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-5910528ab2bb2fa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结果图" title="">                </div>                <div class="image-caption">结果图</div>            </figure><br><br>可以看出结果图片可以说达到发表级，也难怪其可以在2015年发表到NAR这种高水平的杂志上，相关的解释与测定标准可以看官网上的帮助文档:<a href="http://plip.biotec.tu-dresden.de/plip-web/plip/help" target="_blank" rel="external">http://plip.biotec.tu-dresden.de/plip-web/plip/help</a><br><br>同样你也可以下载pse文件，导入进PyMOL中查看:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/903467-93643b8496fd37b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PyMOL" title="">                </div>                <div class="image-caption">PyMOL</div>            </figure><br><br>参考文献:<br>Salentin,S. et al. PLIP: fully automated protein-ligand interaction profiler. Nucl. Acids Res. (1 July 2015) 43 (W1): W443-W447. doi: 10.1093/nar/gkv315<br><br><div style="height: 0; width: 0; max-height: 0; max-width: 0; overflow: hidden; font-size: 0em; padding: 0; margin: 0;" title="MDH:PHA+Jmd0O2BQSUxQYO+8iFByb3RlaW4tTGlnYW5kIEludGVyYWN0aW9uIFByb2ZpbGVy77yJ5piv5LiA5Liq5Zyo57q/55qE6JuL55m96YWN5L2T6Z2e5YWx5Lu36IGU57O755qE5YiG5p6Q5bel5YW377yM5YW2566A5Y2V5piT55So77yM5ZCM5pe25o+Q5L6bR2l0aHVi54mI5pys5Yip5LqO5a2m5Lmg5YW26K6+6K6h5qih5byP44CCUElMUOWPr+S7peebtOaOpeS9v+eUqOWbm+Wtl+espueahFBEQiBjb2Rl5oiW6ICF5L2/55So6Ieq5bex55qEcGRi57uT5p6E5paH5Lu244CC5LmL5ZCO5YiG5p6Q5aSN5ZCI54mp77yM57uT5p6c5bCG5Lya5bGV56S65omA5pyJ5Y+v5rWL5a6a55qE5Zyo5Y6f5a2Q5rC05bmz55qE6Z2e5YWx5Lu36IGU57O777yI5rCi6ZSu77yM5rC05qGl77yM55uQ5qGl77yM5Y2k6ZSu77yM55aP5rC06IGU57O777yMz4At5aCG56ev77yMz4At56a75a2Q6IGU57O777yM6YeR5bGe5aSN5ZCI54mp77yJ44CC5ZCM5pe257uT5p6c5Y+v5Lul5LiL6L295paH5pys57uT5p6c77yM5py65Zmo5Y+v6K+755qEWE1M5qC85byP5Lul5Y+KUHlNT0zlj6/op4bljJbmlofku7bvvIhwc2XvvInvvIzlkIzml7bnvZHnq5nkuIrkuZ/mnIlKU21vbOW6lOeUqOeahDNE6IGU57O75Zu+5YOP44CCPC9wPjxwPuWFtue9keWdgOS4ujpodHRwOi8vcGxpcC5iaW90ZWMudHUtZHJlc2Rlbi5kZS9wbGlwLXdlYi9wbGlwL2luZGV4PGJyPkdpdGh1YuWcsOWdgOS4ujpodHRwczovL2dpdGh1Yi5jb20vc3NhbGVudGluL3BsaXA8L3A+PHA+6aaW5YWI5LiK5LygUERC5oiW6ICF55u05o6l6L6T5YWlUERCIGNvZGXvvIzkvovlpoJgMVhETiBg77yaPGJyPiFb5Li755WM6Z2iXShodHRwOi8vdXBsb2FkLWltYWdlcy5qaWFuc2h1LmlvL3VwbG9hZF9pbWFnZXMvOTAzNDY3LWM4ODlhNzFlOWIzODZjZDYucG5nP2ltYWdlTW9ncjIvYXV0by1vcmllbnQvc3RyaXAlN0NpbWFnZVZpZXcyLzIvdy8xMjQwKTwvcD48cD7nu5PmnpzlpoLlm77vvJo8L3A+PHA+IVvnu5Pmnpzlm75dKGh0dHA6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85MDM0NjctNTkxMDUyOGFiMmJiMmZhMy5wbmc/aW1hZ2VNb2dyMi9hdXRvLW9yaWVudC9zdHJpcCU3Q2ltYWdlVmlldzIvMi93LzEyNDApPC9wPjxwPjxiciBkYXRhLW1jZS1ib2d1cz0iMSI+PC9wPjxwPuWPr+S7peeci+WHuue7k+aenOWbvueJh+WPr+S7peivtOi+vuWIsOWPkeihqOe6p++8jOS5n+mavuaAquWFtuWPr+S7peWcqDIwMTXlubTlj5HooajliLBOQVLov5nnp43pq5jmsLTlubPnmoTmnYLlv5fkuIrvvIznm7jlhbPnmoTop6Pph4rkuI7mtYvlrprmoIflh4blj6/ku6XnnIvlrpjnvZHkuIrnmoTluK7liqnmlofmoaM6aHR0cDovL3BsaXAuYmlvdGVjLnR1LWRyZXNkZW4uZGUvcGxpcC13ZWIvcGxpcC9oZWxwPC9wPjxwPuWQjOagt+S9oOS5n+WPr+S7peS4i+i9vXBzZeaWh+S7tu+8jOWvvOWFpei/m1B5TU9M5Lit5p+l55yLOjwvcD48cD4hW1B5TU9MXShodHRwOi8vdXBsb2FkLWltYWdlcy5qaWFuc2h1LmlvL3VwbG9hZF9pbWFnZXMvOTAzNDY3LTkzNjQzYjg0OTZmZDM3YjcucG5nP2ltYWdlTW9ncjIvYXV0by1vcmllbnQvc3RyaXAlN0NpbWFnZVZpZXcyLzIvdy8xMjQwKTwvcD48cD7lj4LogIPmlofnjK46PGJyPlNhbGVudGluLFMuIGV0IGFsLiBQTElQOiBmdWxseSBhdXRvbWF0ZWQgcHJvdGVpbi1saWdhbmQgaW50ZXJhY3Rpb24gcHJvZmlsZXIuIE51Y2wuIEFjaWRzIFJlcy4gKDEgSnVseSAyMDE1KSA0MyAoVzEpOiBXNDQzLVc0NDcuIGRvaTogMTAuMTA5My9uYXIvZ2t2MzE1PC9wPjxwPuabtOWkmuWOn+WIm+eyvuW9qeinhumikeaVrOivt+WFs+azqCoq55Sf5L+h5p2C6LCIOioqPC9wPjxwPiFbXShodHRwOi8vdXBsb2FkLWltYWdlcy5qaWFuc2h1LmlvL3VwbG9hZF9pbWFnZXMvOTAzNDY3LTIxN2VlNjhjYWFhNjU0YzMucG5nP2ltYWdlTW9ncjIvYXV0by1vcmllbnQvc3RyaXAlN0NpbWFnZVZpZXcyLzIvdy8xMjQwKTwvcD4=">​</div><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;markdown-here-wrapper&quot; data-md-url=&quot;http://kangsgo.com/wp-admin/post-new.php&quot;&gt;&lt;br&gt;&amp;gt; &lt;code&gt;PILP&lt;/code&gt;（Protein-Ligand Interact
      
    
    </summary>
    
      <category term="Dock" scheme="http://kangsgo.com/categories/Dock/"/>
    
    
  </entry>
  
</feed>
